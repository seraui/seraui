{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "title": "Toast",
  "description": "A minimalistic toast component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "toast.tsx",
      "content": "'use client'\r\n\r\nimport React from 'react';\r\nimport Notification, { NotificationPosition, NotificationType } from './toast';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\n// Define the notification item interface\r\ninterface NotificationItem {\r\n  id: number;\r\n  type: NotificationType;\r\n  title: string;\r\n  message?: string;\r\n  showIcon?: boolean;\r\n  duration?: number;\r\n}\r\n\r\nexport default function ToastView() {\r\n    // We'll keep a state for dynamically added notifications\r\n    const [notifications, setNotifications] = React.useState<NotificationItem[]>([]);\r\n    const nextIdRef = React.useRef(1); // To generate unique IDs for new notifications\r\n\r\n    const addNotification = (type: NotificationType, title: string, message?: string, showIcon?: boolean, duration?: number) => {\r\n        const newNotification: NotificationItem = {\r\n            id: nextIdRef.current++,\r\n            type,\r\n            title,\r\n            message,\r\n            showIcon,\r\n            duration,\r\n        };\r\n        setNotifications((prevNotifications) => [...prevNotifications, newNotification]);\r\n    };\r\n\r\n    // New function for loading with timing system\r\n    const addLoadingWithSuccess = (loadingTitle: string, loadingMessage: string, successTitle: string, successMessage: string, loadingDuration: number = 3000) => {\r\n        const loadingId = nextIdRef.current++;\r\n        \r\n        // Add loading notification\r\n        const loadingNotification: NotificationItem = {\r\n            id: loadingId,\r\n            type: 'loading',\r\n            title: loadingTitle,\r\n            message: loadingMessage,\r\n            showIcon: true,\r\n        };\r\n        \r\n        setNotifications((prevNotifications) => [...prevNotifications, loadingNotification]);\r\n        \r\n        // After loading duration, replace with success notification\r\n        setTimeout(() => {\r\n            setNotifications((prevNotifications) => \r\n                prevNotifications.map(notification => \r\n                    notification.id === loadingId \r\n                        ? {\r\n                            ...notification,\r\n                            type: 'success',\r\n                            title: successTitle,\r\n                            message: successMessage,\r\n                            duration: 4000, // Success notification duration\r\n                        }\r\n                        : notification\r\n                )\r\n            );\r\n        }, loadingDuration);\r\n    };\r\n\r\n    const handleClose = (id: number) => {\r\n        setNotifications((prevNotifications) => prevNotifications.filter(n => n.id !== id));\r\n    };\r\n\r\n    // State to manage the current position\r\n    const [position, setPosition] = React.useState<NotificationPosition>('bottom-right');\r\n\r\n    // Function to get Tailwind CSS classes based on position\r\n    const getPositionClasses = (currentPosition: NotificationPosition) => {\r\n        switch (currentPosition) {\r\n            case 'top-left':\r\n                return 'top-4 left-4';\r\n            case 'top-right':\r\n                return 'top-4 right-4';\r\n            case 'bottom-left':\r\n                return 'bottom-4 left-4';\r\n            case 'bottom-right':\r\n                return 'bottom-4 right-4';\r\n            case 'top-center':\r\n                return 'top-4 left-1/2 -translate-x-1/2'; // Centered horizontally at the top\r\n            case 'bottom-center':\r\n                return 'bottom-4 left-1/2 -translate-x-1/2'; // Centered horizontally at the bottom\r\n            default:\r\n                return 'top-4 right-4'; // Default to top-right\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen p-4\">\r\n      {/* Notifications container - Fixed positioning */}\r\n      <div className={`fixed p-4 space-y-2 w-full max-w-sm z-50 ${getPositionClasses(position)}`}>\r\n        <AnimatePresence>\r\n          {/* Render dynamically added notifications */}\r\n          {notifications.map((notification) => (\r\n              <Notification\r\n                  key={notification.id}\r\n                  type={notification.type}\r\n                  title={notification.title}\r\n                  message={notification.message}\r\n                  showIcon={notification.showIcon}\r\n                  duration={notification.duration}\r\n                  onClose={() => handleClose(notification.id)}\r\n              />\r\n          ))}\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      {/* Controls to add new notifications */}\r\n      <div className=\"mt-20 p-6 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md rounded-xl shadow-lg border border-gray-200/50 dark:border-gray-700/50\">\r\n        <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 mb-4 text-center\">Test Notifications</h3>\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2\">\r\n            <button\r\n                onClick={() => addNotification('success', 'Success!', 'Operation completed successfully.', true, 3000)}\r\n                className=\"px-3 py-2 bg-green-500 dark:bg-green-600 text-white rounded-lg text-sm font-medium hover:bg-green-600 dark:hover:bg-green-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Success (3s)\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Info Message', 'Here is some general information.', true, 4000)}\r\n                className=\"px-3 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded-lg text-sm font-medium hover:bg-blue-600 dark:hover:bg-blue-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Info (4s)\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Warning!', 'This is a warning without an icon.', false, 5000)}\r\n                className=\"px-3 py-2 bg-yellow-500 dark:bg-yellow-600 text-white rounded-lg text-sm font-medium hover:bg-yellow-600 dark:hover:bg-yellow-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Warning (5s)\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Error!', 'An error occurred.', true, 6000)}\r\n                className=\"px-3 py-2 bg-red-500 dark:bg-red-600 text-white rounded-lg text-sm font-medium hover:bg-red-600 dark:hover:bg-red-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Error (6s)\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Loading...', 'Please wait a moment.', true)}\r\n                className=\"px-3 py-2 bg-gray-500 dark:bg-gray-600 text-white rounded-lg text-sm font-medium hover:bg-gray-600 dark:hover:bg-gray-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Loading\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Simple Success', undefined, true, 3000)}\r\n                className=\"px-3 py-2 bg-green-700 dark:bg-green-800 text-white rounded-lg text-sm font-medium hover:bg-green-800 dark:hover:bg-green-900 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Simple Success\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Just Info', undefined, false)}\r\n                className=\"px-3 py-2 bg-blue-700 dark:bg-blue-800 text-white rounded-lg text-sm font-medium hover:bg-blue-800 dark:hover:bg-blue-900 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Info (No Icon)\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Critical Error!', 'This is a critical error that requires immediate attention. It will not auto-close.', true)}\r\n                className=\"px-3 py-2 bg-red-800 dark:bg-red-900 text-white rounded-lg text-sm font-medium hover:bg-red-900 dark:hover:bg-red-950 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Critical Error\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Payment Success', 'Your payment of $99.99 has been processed successfully.', true, 4000)}\r\n                className=\"px-3 py-2 bg-emerald-500 dark:bg-emerald-600 text-white rounded-lg text-sm font-medium hover:bg-emerald-600 dark:hover:bg-emerald-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Payment Success\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'System Update', 'New features are available. Check them out!', true, 5000)}\r\n                className=\"px-3 py-2 bg-indigo-500 dark:bg-indigo-600 text-white rounded-lg text-sm font-medium hover:bg-indigo-600 dark:hover:bg-indigo-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                System Update\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Storage Warning', 'You are running low on storage space.', true, 7000)}\r\n                className=\"px-3 py-2 bg-orange-500 dark:bg-orange-600 text-white rounded-lg text-sm font-medium hover:bg-orange-600 dark:hover:bg-orange-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Storage Warning\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Connection Lost', 'Internet connection has been lost. Trying to reconnect...', true, 8000)}\r\n                className=\"px-3 py-2 bg-rose-500 dark:bg-rose-600 text-white rounded-lg text-sm font-medium hover:bg-rose-600 dark:hover:bg-rose-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Connection Lost\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Uploading Files', 'Please wait while we upload your files...', true)}\r\n                className=\"px-3 py-2 bg-purple-500 dark:bg-purple-600 text-white rounded-lg text-sm font-medium hover:bg-purple-600 dark:hover:bg-purple-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Uploading Files\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Profile Updated', 'Your profile has been updated successfully.', false, 3000)}\r\n                className=\"px-3 py-2 bg-teal-500 dark:bg-teal-600 text-white rounded-lg text-sm font-medium hover:bg-teal-600 dark:hover:bg-teal-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Profile Updated\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Backup Complete', 'Your data has been backed up successfully.', true, 4000)}\r\n                className=\"px-3 py-2 bg-cyan-500 dark:bg-cyan-600 text-white rounded-lg text-sm font-medium hover:bg-cyan-600 dark:hover:bg-cyan-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Backup Complete\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Battery Low', 'Your device battery is running low.', false, 6000)}\r\n                className=\"px-3 py-2 bg-amber-500 dark:bg-amber-600 text-white rounded-lg text-sm font-medium hover:bg-amber-600 dark:hover:bg-amber-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Battery Low\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Server Error', 'Unable to connect to server. Please try again later.', true, 10000)}\r\n                className=\"px-3 py-2 bg-red-600 dark:bg-red-700 text-white rounded-lg text-sm font-medium hover:bg-red-700 dark:hover:bg-red-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Server Error\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Processing Data', 'Analyzing your data...', true)}\r\n                className=\"px-3 py-2 bg-slate-500 dark:bg-slate-600 text-white rounded-lg text-sm font-medium hover:bg-slate-600 dark:hover:bg-slate-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Processing Data\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Email Sent', 'Your email has been sent successfully.', true, 3000)}\r\n                className=\"px-3 py-2 bg-lime-500 dark:bg-lime-600 text-white rounded-lg text-sm font-medium hover:bg-lime-600 dark:hover:bg-lime-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Email Sent\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'New Message', 'You have received a new message from John Doe.', false, 5000)}\r\n                className=\"px-3 py-2 bg-sky-500 dark:bg-sky-600 text-white rounded-lg text-sm font-medium hover:bg-sky-600 dark:hover:bg-sky-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                New Message\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Permission Required', 'This action requires additional permissions.', true, 7000)}\r\n                className=\"px-3 py-2 bg-yellow-600 dark:bg-yellow-700 text-white rounded-lg text-sm font-medium hover:bg-yellow-700 dark:hover:bg-yellow-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Permission Required\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Login Failed', 'Invalid username or password. Please try again.', true, 8000)}\r\n                className=\"px-3 py-2 bg-red-700 dark:bg-red-800 text-white rounded-lg text-sm font-medium hover:bg-red-800 dark:hover:bg-red-900 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Login Failed\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Download Complete', 'File \"document.pdf\" has been downloaded successfully.', true, 4000)}\r\n                className=\"px-3 py-2 bg-violet-500 dark:bg-violet-600 text-white rounded-lg text-sm font-medium hover:bg-violet-600 dark:hover:bg-violet-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Download Complete\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Sync in Progress', 'Syncing your data with the cloud...', true, 6000)}\r\n                className=\"px-3 py-2 bg-fuchsia-500 dark:bg-fuchsia-600 text-white rounded-lg text-sm font-medium hover:bg-fuchsia-600 dark:hover:bg-fuchsia-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Sync in Progress\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Maintenance Mode', 'System will be under maintenance for 2 hours.', false, 10000)}\r\n                className=\"px-3 py-2 bg-orange-600 dark:bg-orange-700 text-white rounded-lg text-sm font-medium hover:bg-orange-700 dark:hover:bg-orange-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Maintenance Mode\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'API Rate Limit', 'Too many requests. Please wait 5 minutes.', true, 12000)}\r\n                className=\"px-3 py-2 bg-red-600 dark:bg-red-700 text-white rounded-lg text-sm font-medium hover:bg-red-700 dark:hover:bg-red-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                API Rate Limit\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Generating Report', 'Creating your monthly report...', true)}\r\n                className=\"px-3 py-2 bg-indigo-600 dark:bg-indigo-700 text-white rounded-lg text-sm font-medium hover:bg-indigo-700 dark:hover:bg-indigo-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Generating Report\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Settings Saved', 'Your preferences have been updated.', false, 3000)}\r\n                className=\"px-3 py-2 bg-emerald-600 dark:bg-emerald-700 text-white rounded-lg text-sm font-medium hover:bg-emerald-700 dark:hover:bg-emerald-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Settings Saved\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'New Feature', 'Dark mode is now available! Try it out.', true, 8000)}\r\n                className=\"px-3 py-2 bg-blue-600 dark:bg-blue-700 text-white rounded-lg text-sm font-medium hover:bg-blue-700 dark:hover:bg-blue-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                New Feature\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Session Expiring', 'Your session will expire in 5 minutes.', true, 15000)}\r\n                className=\"px-3 py-2 bg-amber-600 dark:bg-amber-700 text-white rounded-lg text-sm font-medium hover:bg-amber-700 dark:hover:bg-amber-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Session Expiring\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Database Error', 'Unable to save data. Please try again.', true, 9000)}\r\n                className=\"px-3 py-2 bg-red-800 dark:bg-red-900 text-white rounded-lg text-sm font-medium hover:bg-red-900 dark:hover:bg-red-950 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Database Error\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Installing Updates', 'Installing version 2.1.0...', true)}\r\n                className=\"px-3 py-2 bg-purple-600 dark:bg-purple-700 text-white rounded-lg text-sm font-medium hover:bg-purple-700 dark:hover:bg-purple-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Installing Updates\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Account Verified', 'Your email has been verified successfully.', true, 4000)}\r\n                className=\"px-3 py-2 bg-green-600 dark:bg-green-700 text-white rounded-lg text-sm font-medium hover:bg-green-700 dark:hover:bg-green-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Account Verified\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Backup Started', 'Starting automatic backup process...', false, 5000)}\r\n                className=\"px-3 py-2 bg-cyan-600 dark:bg-cyan-700 text-white rounded-lg text-sm font-medium hover:bg-cyan-700 dark:hover:bg-cyan-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Backup Started\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Low Memory', 'System memory is running low.', true, 7000)}\r\n                className=\"px-3 py-2 bg-yellow-700 dark:bg-yellow-800 text-white rounded-lg text-sm font-medium hover:bg-yellow-800 dark:hover:bg-yellow-900 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Low Memory\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Network Timeout', 'Request timed out. Check your connection.', true, 10000)}\r\n                className=\"px-3 py-2 bg-red-900 dark:bg-red-950 text-white rounded-lg text-sm font-medium hover:bg-red-950 dark:hover:bg-red-950 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Network Timeout\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Compressing Files', 'Compressing your files for upload...', true)}\r\n                className=\"px-3 py-2 bg-slate-600 dark:bg-slate-700 text-white rounded-lg text-sm font-medium hover:bg-slate-700 dark:hover:bg-slate-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Compressing Files\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Order Confirmed', 'Order #12345 has been confirmed and will ship soon.', true, 5000)}\r\n                className=\"px-3 py-2 bg-lime-600 dark:bg-lime-700 text-white rounded-lg text-sm font-medium hover:bg-lime-700 dark:hover:bg-lime-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Order Confirmed\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Meeting Reminder', 'Team meeting starts in 10 minutes.', false, 8000)}\r\n                className=\"px-3 py-2 bg-sky-600 dark:bg-sky-700 text-white rounded-lg text-sm font-medium hover:bg-sky-700 dark:hover:bg-sky-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Meeting Reminder\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Plugin Outdated', 'Some plugins need to be updated for security.', true, 9000)}\r\n                className=\"px-3 py-2 bg-orange-700 dark:bg-orange-800 text-white rounded-lg text-sm font-medium hover:bg-orange-800 dark:hover:bg-orange-900 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Plugin Outdated\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Payment Declined', 'Your payment was declined. Please check your card details.', true, 12000)}\r\n                className=\"px-3 py-2 bg-rose-600 dark:bg-rose-700 text-white rounded-lg text-sm font-medium hover:bg-rose-700 dark:hover:bg-rose-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Payment Declined\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('loading', 'Scanning System', 'Scanning for viruses and malware...', true)}\r\n                className=\"px-3 py-2 bg-zinc-500 dark:bg-zinc-600 text-white rounded-lg text-sm font-medium hover:bg-zinc-600 dark:hover:bg-zinc-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Scanning System\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('success', 'Password Changed', 'Your password has been updated successfully.', true, 4000)}\r\n                className=\"px-3 py-2 bg-teal-600 dark:bg-teal-700 text-white rounded-lg text-sm font-medium hover:bg-teal-700 dark:hover:bg-teal-800 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Password Changed\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('info', 'Cache Cleared', 'Browser cache has been cleared successfully.', false, 3000)}\r\n                className=\"px-3 py-2 bg-blue-800 dark:bg-blue-900 text-white rounded-lg text-sm font-medium hover:bg-blue-900 dark:hover:bg-blue-950 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Cache Cleared\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('warning', 'Disk Space', 'Only 5GB of disk space remaining.', true, 10000)}\r\n                className=\"px-3 py-2 bg-amber-700 dark:bg-amber-800 text-white rounded-lg text-sm font-medium hover:bg-amber-800 dark:hover:bg-amber-900 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Disk Space\r\n            </button>\r\n            <button\r\n                onClick={() => addNotification('error', 'Service Unavailable', 'The service is temporarily unavailable.', true, 15000)}\r\n                className=\"px-3 py-2 bg-red-950 dark:bg-red-950 text-white rounded-lg text-sm font-medium hover:bg-red-950 dark:hover:bg-red-950 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Service Unavailable\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Processing Payment',\r\n                    'Please wait while we process your payment...',\r\n                    'Payment Successful',\r\n                    'Your payment of $29.99 has been processed successfully!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-blue-500 to-purple-500 dark:from-blue-600 dark:to-purple-600 text-white rounded-lg text-sm font-medium hover:from-blue-600 hover:to-purple-600 dark:hover:from-blue-700 dark:hover:to-purple-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Payment Processing\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Uploading Files',\r\n                    'Uploading 3 files to cloud storage...',\r\n                    'Upload Complete',\r\n                    'All files have been uploaded successfully!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-green-500 to-teal-500 dark:from-green-600 dark:to-teal-600 text-white rounded-lg text-sm font-medium hover:from-green-600 hover:to-teal-600 dark:hover:from-green-700 dark:hover:to-teal-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                File Upload\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Sending Email',\r\n                    'Preparing and sending your email...',\r\n                    'Email Sent',\r\n                    'Your email has been delivered successfully!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-orange-500 to-red-500 dark:from-orange-600 dark:to-red-600 text-white rounded-lg text-sm font-medium hover:from-orange-600 hover:to-red-600 dark:hover:from-orange-700 dark:hover:to-red-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Send Email\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Generating Report',\r\n                    'Creating your monthly analytics report...',\r\n                    'Report Ready',\r\n                    'Your report has been generated and is ready to download!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-indigo-500 to-blue-500 dark:from-indigo-600 dark:to-blue-600 text-white rounded-lg text-sm font-medium hover:from-indigo-600 hover:to-blue-600 dark:hover:from-indigo-700 dark:hover:to-blue-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Generate Report\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Installing Updates',\r\n                    'Installing version 2.1.0...',\r\n                    'Update Complete',\r\n                    'System has been updated successfully!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-purple-500 to-pink-500 dark:from-purple-600 dark:to-pink-600 text-white rounded-lg text-sm font-medium hover:from-purple-600 hover:to-pink-600 dark:hover:from-purple-700 dark:hover:to-pink-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Install Update\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Backing Up Data',\r\n                    'Creating backup of your important files...',\r\n                    'Backup Complete',\r\n                    'Your data has been backed up successfully!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-cyan-500 to-blue-500 dark:from-cyan-600 dark:to-blue-600 text-white rounded-lg text-sm font-medium hover:from-cyan-600 hover:to-blue-600 dark:hover:from-cyan-700 dark:hover:to-blue-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Backup Data\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Processing Order',\r\n                    'Validating and processing your order...',\r\n                    'Order Processed',\r\n                    'Your order has been processed and confirmed!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-emerald-500 to-green-500 dark:from-emerald-600 dark:to-green-600 text-white rounded-lg text-sm font-medium hover:from-emerald-600 hover:to-green-600 dark:hover:from-emerald-700 dark:hover:to-green-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Process Order\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Syncing Data',\r\n                    'Synchronizing your data with the cloud...',\r\n                    'Sync Complete',\r\n                    'All your data has been synchronized!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-violet-500 to-purple-500 dark:from-violet-600 dark:to-purple-600 text-white rounded-lg text-sm font-medium hover:from-violet-600 hover:to-purple-600 dark:hover:from-violet-700 dark:hover:to-purple-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Sync Data\r\n            </button>\r\n            <button\r\n                onClick={() => addLoadingWithSuccess(\r\n                    'Compressing Files',\r\n                    'Compressing files for faster upload...',\r\n                    'Compression Complete',\r\n                    'Files have been compressed and are ready!'\r\n                )}\r\n                className=\"px-3 py-2 bg-gradient-to-r from-slate-500 to-gray-500 dark:from-slate-600 dark:to-gray-600 text-white rounded-lg text-sm font-medium hover:from-slate-600 hover:to-gray-600 dark:hover:from-slate-700 dark:hover:to-gray-700 transition-all duration-200 hover:scale-105 shadow-md\"\r\n            >\r\n                Compress Files\r\n            </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Position controls */}\r\n      <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md p-3 rounded-xl shadow-lg flex flex-wrap justify-center gap-1 z-40 border border-gray-200/50 dark:border-gray-700/50\">\r\n          <button\r\n              onClick={() => setPosition('top-left')}\r\n              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${position === 'top-left' ? 'bg-blue-500 dark:bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n          >\r\n              Top Left\r\n          </button>\r\n          <button\r\n              onClick={() => setPosition('top-center')}\r\n              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${position === 'top-center' ? 'bg-blue-500 dark:bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n          >\r\n              Top Center\r\n          </button>\r\n          <button\r\n              onClick={() => setPosition('top-right')}\r\n              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${position === 'top-right' ? 'bg-blue-500 dark:bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n          >\r\n              Top Right\r\n          </button>\r\n          <button\r\n              onClick={() => setPosition('bottom-left')}\r\n              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${position === 'bottom-left' ? 'bg-blue-500 dark:bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n          >\r\n              Bottom Left\r\n          </button>\r\n          <button\r\n              onClick={() => setPosition('bottom-center')}\r\n              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${position === 'bottom-center' ? 'bg-blue-500 dark:bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n          >\r\n              Bottom Center\r\n          </button>\r\n          <button\r\n              onClick={() => setPosition('bottom-right')}\r\n              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${position === 'bottom-right' ? 'bg-blue-500 dark:bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n          >\r\n              Bottom Right\r\n          </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "toast.tsx",
      "content": "'use client';\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Define the props for our Icon components\r\ninterface IconProps {\r\n  className?: string;\r\n}\r\n\r\n// Information Icon SVG\r\nconst InfoIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n  </svg>\r\n);\r\n\r\n// Success Icon SVG\r\nconst SuccessIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n  </svg>\r\n);\r\n\r\n// Warning Icon SVG\r\nconst WarningIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n  </svg>\r\n);\r\n\r\n// Error Icon SVG\r\nconst ErrorIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n  </svg>\r\n);\r\n\r\n// Close Icon SVG\r\nconst CloseIcon: React.FC<IconProps> = ({ className }) => (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n    </svg>\r\n);\r\n\r\n// Loading Spinner SVG\r\nconst LoadingSpinner: React.FC<IconProps> = ({ className }) => (\r\n  <svg className={`animate-spin ${className}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n  </svg>\r\n);\r\n\r\n// Define the types for the notification variants\r\nexport type NotificationType = 'info' | 'success' | 'warning' | 'error' | 'loading';\r\n\r\n// Define the notification position types\r\nexport type NotificationPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'top-center' | 'bottom-center';\r\n\r\n// Define the props for the Notification component\r\ninterface NotificationProps {\r\n  type: NotificationType;\r\n  title: string;\r\n  message?: string; // Message is now optional\r\n  showIcon?: boolean; // New prop to control icon visibility\r\n  duration?: number; // New prop for auto-dismissal duration in milliseconds\r\n  onClose: () => void;\r\n}\r\n\r\n// A map to store styles and icons for each notification type\r\nconst notificationConfig = {\r\n  info: {\r\n    bgColor: 'bg-blue-50 dark:bg-blue-950/20',\r\n    borderColor: 'border-blue-200 dark:border-blue-800/50',\r\n    iconColor: 'text-blue-500 dark:text-blue-400',\r\n    icon: <InfoIcon className=\"h-6 w-6\" />,\r\n    gradient: 'from-blue-100/60 to-transparent dark:from-blue-900/20 dark:to-transparent',\r\n  },\r\n  success: {\r\n    bgColor: 'bg-green-50 dark:bg-green-950/20',\r\n    borderColor: 'border-green-200 dark:border-green-800/50',\r\n    iconColor: 'text-green-500 dark:text-green-400',\r\n    icon: <SuccessIcon className=\"h-6 w-6\" />,\r\n    gradient: 'from-green-100/60 to-transparent dark:from-green-900/20 dark:to-transparent',\r\n  },\r\n  warning: {\r\n    bgColor: 'bg-yellow-50 dark:bg-yellow-950/20',\r\n    borderColor: 'border-yellow-200 dark:border-yellow-800/50',\r\n    iconColor: 'text-yellow-500 dark:text-yellow-400',\r\n    icon: <WarningIcon className=\"h-6 w-6\" />,\r\n    gradient: 'from-yellow-100/60 to-transparent dark:from-yellow-900/20 dark:to-transparent',\r\n  },\r\n  error: {\r\n    bgColor: 'bg-red-50 dark:bg-red-950/20',\r\n    borderColor: 'border-red-200 dark:border-red-800/50',\r\n    iconColor: 'text-red-500 dark:text-red-400',\r\n    icon: <ErrorIcon className=\"h-6 w-6\" />,\r\n    gradient: 'from-red-100/60 to-transparent dark:from-red-900/20 dark:to-transparent',\r\n  },\r\n  loading: { // New loading configuration\r\n    bgColor: 'bg-gray-50 dark:bg-gray-950/20',\r\n    borderColor: 'border-gray-200 dark:border-gray-800/50',\r\n    iconColor: 'text-gray-500 dark:text-gray-400',\r\n    icon: <LoadingSpinner className=\"h-6 w-6\" />,\r\n    gradient: 'from-gray-100/60 to-transparent dark:from-gray-900/20 dark:to-transparent',\r\n  },\r\n};\r\n\r\nconst Notification: React.FC<NotificationProps> = ({ type, title, message, showIcon = true, duration, onClose }) => {\r\n  const config = notificationConfig[type];\r\n\r\n  return (\r\n    // Wrap with motion.div for animations and apply glassy styles with dark mode support\r\n    <motion.div\r\n      initial={{ opacity: 0, x: 100 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      exit={{ opacity: 0, x: 100 }}\r\n      transition={{ duration: 0.3 }}\r\n      className={`relative w-full max-w-sm rounded-xl p-4 backdrop-blur-xl bg-white/15 dark:bg-black/15 border border-gray-300/60 dark:border-gray-700/60 overflow-hidden ring-1 ring-gray-200/40 dark:ring-gray-700/40 drop-shadow-xl transition-all duration-300 ease-in-out transform hover:scale-105`}\r\n    >\r\n        <div className={`absolute top-0 left-0 h-full w-full bg-gradient-to-br ${config.gradient} opacity-50`}></div>\r\n        <div className=\"relative z-10 flex items-center space-x-4\">\r\n            {showIcon && (\r\n                <div className={`flex-shrink-0 ${config.iconColor}`}>\r\n                    {config.icon}\r\n                </div>\r\n            )}\r\n            <div className=\"flex-1\">\r\n                <p className=\"font-normal text-gray-900 dark:text-gray-100 text-lg\">{title}</p>\r\n                {message && (\r\n                    <p className=\"text-sm text-gray-800 dark:text-gray-300 mt-1\">{message}</p>\r\n                )}\r\n            </div>\r\n            <button onClick={onClose} className=\"flex-shrink-0 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 transition-colors p-1.5 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800\">\r\n                <CloseIcon className=\"h-5 w-5\" />\r\n            </button>\r\n        </div>\r\n        {duration && ( // Render progress bar only if duration is provided\r\n            <div className=\"absolute bottom-0 left-0 h-1 w-full bg-gray-300/50 dark:bg-gray-600/50 rounded-b-xl overflow-hidden\">\r\n                <motion.div\r\n                    initial={{ width: 0 }}\r\n                    animate={{ width: '100%' }}\r\n                    transition={{ duration: duration / 1000, ease: \"linear\" }}\r\n                    onAnimationComplete={() => onClose()} // Call onClose when progress bar animation completes\r\n                    className={`h-full bg-gradient-to-r from-green-400 via-blue-400 to-sky-400 dark:from-green-500 dark:via-blue-500 dark:to-sky-500`}\r\n                ></motion.div>\r\n            </div>\r\n        )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Notification;",
      "type": "registry:ui"
    }
  ]
}