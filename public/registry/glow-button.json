{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "glow-button",
  "title": "Glow Button",
  "description": "A minimalistic glow button component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "glow-button.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface GlowButtonProps {\r\n  children: React.ReactNode;\r\n  variant?: \"blue\" | \"pink\" | \"green\";\r\n}\r\n\r\nconst variants = {\r\n  blue: {\r\n    light: {\r\n      outerGlow: \"rgba(59, 130, 246, 0.4)\",\r\n      blobGlow: \"rgba(59, 130, 246, 0.6)\",\r\n      blobHighlight: \"#60a5fa\",\r\n      blobShadow: \"rgba(59, 130, 246, 0.25)\",\r\n      innerGlow: \"rgba(59, 130, 246, 0.1)\",\r\n      innerHighlight: \"rgba(147, 197, 253, 0.15)\",\r\n      outerBg: \"linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)\",\r\n      innerBg: \"linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%)\",\r\n      textColor: \"#1e293b\",\r\n    },\r\n    dark: {\r\n      outerGlow: \"rgba(255, 255, 255, 0.35)\",\r\n      blobGlow: \"rgba(0, 0, 255, 0.5)\",\r\n      blobHighlight: \"#3fe9ff\",\r\n      blobShadow: \"rgba(0, 81, 255, 0.18)\",\r\n      innerGlow: \"rgba(0, 0, 255, 0.07)\",\r\n      innerHighlight: \"rgba(0, 225, 255, 0.1)\",\r\n      outerBg: \"radial-gradient(circle 80px at 80% -10%, #ffffff, #181b1b)\",\r\n      innerBg: \"radial-gradient(circle 80px at 80% -50%, #777777, #0f1111)\",\r\n      textColor: \"#ffffff\",\r\n    },\r\n  },\r\n  pink: {\r\n    light: {\r\n      outerGlow: \"rgba(236, 72, 153, 0.4)\",\r\n      blobGlow: \"rgba(236, 72, 153, 0.6)\",\r\n      blobHighlight: \"#f472b6\",\r\n      blobShadow: \"rgba(236, 72, 153, 0.25)\",\r\n      innerGlow: \"rgba(236, 72, 153, 0.1)\",\r\n      innerHighlight: \"rgba(251, 207, 232, 0.15)\",\r\n      outerBg: \"linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%)\",\r\n      innerBg: \"linear-gradient(135deg, #ffffff 0%, #fdf2f8 100%)\",\r\n      textColor: \"#831843\",\r\n    },\r\n    dark: {\r\n      outerGlow: \"rgba(255, 230, 255, 0.4)\",\r\n      blobGlow: \"rgba(255, 0, 150, 0.5)\",\r\n      blobHighlight: \"#ff66cc\",\r\n      blobShadow: \"rgba(255, 0, 150, 0.18)\",\r\n      innerGlow: \"rgba(255, 0, 150, 0.07)\",\r\n      innerHighlight: \"rgba(255, 102, 204, 0.1)\",\r\n      outerBg: \"radial-gradient(circle 80px at 80% -10%, #ffffff, #181b1b)\",\r\n      innerBg: \"radial-gradient(circle 80px at 80% -50%, #777777, #0f1111)\",\r\n      textColor: \"#ffffff\",\r\n    },\r\n  },\r\n  green: {\r\n    light: {\r\n      outerGlow: \"rgba(34, 197, 94, 0.4)\",\r\n      blobGlow: \"rgba(34, 197, 94, 0.6)\",\r\n      blobHighlight: \"#4ade80\",\r\n      blobShadow: \"rgba(34, 197, 94, 0.25)\",\r\n      innerGlow: \"rgba(34, 197, 94, 0.1)\",\r\n      innerHighlight: \"rgba(187, 247, 208, 0.15)\",\r\n      outerBg: \"linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%)\",\r\n      innerBg: \"linear-gradient(135deg, #ffffff 0%, #f0fdf4 100%)\",\r\n      textColor: \"#14532d\",\r\n    },\r\n    dark: {\r\n      outerGlow: \"rgba(230, 255, 230, 0.4)\",\r\n      blobGlow: \"rgba(0, 255, 100, 0.5)\",\r\n      blobHighlight: \"#adff2f\",\r\n      blobShadow: \"rgba(0, 255, 100, 0.18)\",\r\n      innerGlow: \"rgba(0, 255, 100, 0.07)\",\r\n      innerHighlight: \"rgba(173, 255, 47, 0.1)\",\r\n      outerBg: \"radial-gradient(circle 80px at 80% -10%, #ffffff, #181b1b)\",\r\n      innerBg: \"radial-gradient(circle 80px at 80% -50%, #777777, #0f1111)\",\r\n      textColor: \"#ffffff\",\r\n    },\r\n  },\r\n};\r\n\r\n// Custom hook to detect theme\r\nconst useTheme = () => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkTheme = () => {\r\n      const isDarkMode =\r\n        document.documentElement.classList.contains(\"dark\") ||\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n      setIsDark(isDarkMode);\r\n    };\r\n\r\n    checkTheme();\r\n\r\n    // Listen for theme changes\r\n    const observer = new MutationObserver(checkTheme);\r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"],\r\n    });\r\n\r\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    mediaQuery.addEventListener(\"change\", checkTheme);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n      mediaQuery.removeEventListener(\"change\", checkTheme);\r\n    };\r\n  }, []);\r\n\r\n  return isDark;\r\n};\r\n\r\nconst GlowButton: React.FC<GlowButtonProps> = ({\r\n  children,\r\n  variant = \"blue\",\r\n}) => {\r\n  const isDark = useTheme();\r\n  const variantColors = variants[variant] || variants.blue;\r\n  const colors = isDark ? variantColors.dark : variantColors.light;\r\n\r\n  return (\r\n    <button\r\n      className=\"relative cursor-pointer rounded-2xl border-none p-0.5 transition-transform duration-300 ease-in-out hover:scale-105 active:scale-95\"\r\n      style={{\r\n        background: colors.outerBg,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"absolute top-0 right-0 h-[60%] w-[65%] rounded-[120px] -z-10\"\r\n        style={{ boxShadow: `0 0 30px ${colors.outerGlow}` }}\r\n      ></div>\r\n\r\n      <div\r\n        className=\"absolute bottom-0 left-0 h-full w-[70px] rounded-2xl\"\r\n        style={{\r\n          boxShadow: `-10px 10px 30px ${colors.blobShadow}`,\r\n          background: `radial-gradient(circle 60px at 0% 100%, ${colors.blobHighlight}, ${colors.blobGlow}, transparent)`,\r\n        }}\r\n      ></div>\r\n\r\n      <div\r\n        className=\"relative z-20 flex h-11 items-center justify-center overflow-hidden rounded-[14px] px-8\"\r\n        style={{\r\n          background: colors.innerBg,\r\n          color: colors.textColor,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"absolute top-0 left-0 h-full w-full rounded-[14px]\"\r\n          style={{\r\n            background: `radial-gradient(circle 60px at 0% 100%, ${colors.innerHighlight}, ${colors.innerGlow}, transparent)`,\r\n          }}\r\n        ></div>\r\n\r\n        <span className=\"relative z-10 whitespace-nowrap text-lg font-semibold\">\r\n          {children}\r\n        </span>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default function SeraButtonView() {\r\n  return (\r\n    <div className=\"flex gap-5\">\r\n      <GlowButton variant=\"blue\">Blue Glow</GlowButton>\r\n      <GlowButton variant=\"pink\">Pink Glow</GlowButton>\r\n      <GlowButton variant=\"green\">Green Glow</GlowButton>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}