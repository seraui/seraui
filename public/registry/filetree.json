{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "filetree",
  "title": "Filetree",
  "description": "A minimalistic filetree component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "filetree.tsx",
      "content": "\"use client\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface FileTreeItem {\r\n  name: string;\r\n  type: \"folder\" | \"file\";\r\n  icon?: React.ComponentType;\r\n  children?: FileTreeItem[];\r\n}\r\n\r\ninterface FolderIconProps {\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface ChevronIconProps {\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface TreeIconProps {\r\n  item: FileTreeItem;\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface TreeNodeProps {\r\n  item: FileTreeItem;\r\n  selectedFile: string;\r\n  onFileSelect: (fileName: string) => void;\r\n}\r\n\r\nconst FileIcon = () => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 text-gray-500 dark:text-gray-400 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth=\"2\"\r\n      d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\r\n    />\r\n  </svg>\r\n);\r\nconst JsIcon = () => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 48 48\"\r\n  >\r\n    <path fill=\"#ffd600\" d=\"M6,42V6h36v36H6z\"></path>\r\n    <path\r\n      fill=\"none\"\r\n      stroke=\"#000001\"\r\n      strokeMiterlimit=\"10\"\r\n      strokeWidth=\"3.3\"\r\n      d=\"M23.783,22.352v9.819 c0,3.764-4.38,4.022-6.283,0.802\"\r\n    ></path>\r\n    <path\r\n      fill=\"none\"\r\n      stroke=\"#000001\"\r\n      strokeMiterlimit=\"10\"\r\n      strokeWidth=\"3.3\"\r\n      d=\"M34.69,25.343 c-1.739-2.727-5.674-2.345-5.84,0.558c-0.214,3.757,6.768,2.938,6.247,7.107c-0.365,2.92-4.874,3.858-7.193-0.065\"\r\n    ></path>\r\n  </svg>\r\n);\r\nconst HtmlIcon = () => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 48 48\"\r\n  >\r\n    <path fill=\"#E65100\" d=\"M41,5H7l3,34l14,4l14-4L41,5L41,5z\"></path>\r\n    <path fill=\"#FF6D00\" d=\"M24 8L24 39.9 35.2 36.7 37.7 8z\"></path>\r\n    <path\r\n      fill=\"#FFF\"\r\n      d=\"M24,25v-4h8.6l-0.7,11.5L24,35.1v-4.2l4.1-1.4l0.3-4.5H24z M32.9,17l0.3-4H24v4H32.9z\"\r\n    ></path>\r\n    <path\r\n      fill=\"#EEE\"\r\n      d=\"M24,30.9v4.2l-7.9-2.6L15.7,27h4l0.2,2.5L24,30.9z M19.1,17H24v-4h-9.1l0.7,12H24v-4h-4.6L19.1,17z\"\r\n    ></path>\r\n  </svg>\r\n);\r\nconst CssIcon = () => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 48 48\"\r\n  >\r\n    <path fill=\"#0277BD\" d=\"M41,5H7l3,34l14,4l14-4L41,5L41,5z\"></path>\r\n    <path fill=\"#039BE5\" d=\"M24 8L24 39.9 35.2 36.7 37.7 8z\"></path>\r\n    <path\r\n      fill=\"#FFF\"\r\n      d=\"M33.1 13L24 13 24 17 28.9 17 28.6 21 24 21 24 25 28.4 25 28.1 29.5 24 30.9 24 35.1 31.9 32.5 32.6 21 32.6 21z\"\r\n    ></path>\r\n    <path\r\n      fill=\"#EEE\"\r\n      d=\"M24,13v4h-8.9l-0.3-4H24z M19.4,21l0.2,4H24v-4H19.4z M19.8,27h-4l0.3,5.5l7.9,2.6v-4.2l-4.1-1.4L19.8,27z\"\r\n    ></path>\r\n  </svg>\r\n);\r\nconst ReactIcon = () => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 text-cyan-400 shrink-0\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"12\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\r\n    <g>\r\n      <ellipse\r\n        cx=\"12\"\r\n        cy=\"12\"\r\n        rx=\"11\"\r\n        ry=\"4.2\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"1.5\"\r\n      />\r\n      <ellipse\r\n        cx=\"12\"\r\n        cy=\"12\"\r\n        rx=\"11\"\r\n        ry=\"4.2\"\r\n        transform=\"rotate(60 12 12)\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"1.5\"\r\n      />\r\n      <ellipse\r\n        cx=\"12\"\r\n        cy=\"12\"\r\n        rx=\"11\"\r\n        ry=\"4.2\"\r\n        transform=\"rotate(120 12 12)\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"1.5\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst FolderIcon: React.FC<FolderIconProps> = ({ isOpen }) => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 text-yellow-500 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    {isOpen ? (\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"2\"\r\n        d=\"M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z\"\r\n      />\r\n    ) : (\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"2\"\r\n        d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\r\n      />\r\n    )}\r\n  </svg>\r\n);\r\n\r\nconst ChevronIcon: React.FC<ChevronIconProps> = ({ isOpen }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n    className={`w-4 h-4 text-gray-500 dark:text-gray-400 transition-transform duration-200 shrink-0 ${isOpen ? \"rotate-90\" : \"\"}`}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst fileTreeData: FileTreeItem[] = [\r\n  {\r\n    name: \"public\",\r\n    type: \"folder\",\r\n    children: [\r\n      { name: \"index.html\", type: \"file\" },\r\n      { name: \"favicon.ico\", type: \"file\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"src\",\r\n    type: \"folder\",\r\n    children: [\r\n      {\r\n        name: \"components\",\r\n        type: \"folder\",\r\n        children: [\r\n          { name: \"Button.jsx\", type: \"file\", icon: ReactIcon },\r\n          { name: \"Modal.js\", type: \"file\" },\r\n        ],\r\n      },\r\n      {\r\n        name: \"hooks\",\r\n        type: \"folder\",\r\n        children: [{ name: \"useFetch.js\", type: \"file\" }],\r\n      },\r\n      { name: \"App.jsx\", type: \"file\", icon: ReactIcon },\r\n      { name: \"index.js\", type: \"file\" },\r\n      { name: \"styles.css\", type: \"file\" },\r\n    ],\r\n  },\r\n  { name: \"package.json\", type: \"file\" },\r\n  { name: \"README.md\", type: \"file\" },\r\n];\r\n\r\nconst TreeIcon: React.FC<TreeIconProps> = ({ item, isOpen }) => {\r\n  if (item.icon) {\r\n    const IconComponent = item.icon;\r\n    return <IconComponent />;\r\n  }\r\n  if (item.type === \"folder\") {\r\n    return <FolderIcon isOpen={isOpen} />;\r\n  }\r\n  if (item.name.endsWith(\".js\") || item.name.endsWith(\".jsx\"))\r\n    return <JsIcon />;\r\n  if (item.name.endsWith(\".html\")) return <HtmlIcon />;\r\n  if (item.name.endsWith(\".css\")) return <CssIcon />;\r\n\r\n  return <FileIcon />;\r\n};\r\n\r\nconst TreeNode: React.FC<TreeNodeProps> = ({\r\n  item,\r\n  selectedFile,\r\n  onFileSelect,\r\n}) => {\r\n  const isFolder = item.type === \"folder\";\r\n  const [isOpen, setIsOpen] = useState(isFolder);\r\n\r\n  const handleToggle = () => {\r\n    if (isFolder) {\r\n      setIsOpen(!isOpen);\r\n    } else {\r\n      onFileSelect(item.name);\r\n    }\r\n  };\r\n\r\n  const isSelected = !isFolder && selectedFile === item.name;\r\n\r\n  return (\r\n    <div className=\"text-gray-700 dark:text-gray-300 relative\">\r\n      <div\r\n        className={`flex items-center py-1.5 px-2 rounded-md cursor-pointer transition-colors duration-150 ${\r\n          isSelected\r\n            ? \"bg-blue-100 dark:bg-blue-500/20 text-blue-700 dark:text-white\"\r\n            : \"hover:bg-gray-100 dark:hover:bg-gray-800\"\r\n        }`}\r\n        onClick={handleToggle}\r\n      >\r\n        <div className=\"flex items-center flex-grow\">\r\n          {isFolder ? (\r\n            <ChevronIcon isOpen={isOpen} />\r\n          ) : (\r\n            <div className=\"w-4 shrink-0\"></div>\r\n          )}\r\n          <div className=\"flex items-center ml-1\">\r\n            <TreeIcon item={item} isOpen={isOpen} />\r\n            <span className=\"text-sm ml-1.5\">{item.name}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`pl-4 relative overflow-hidden transition-all duration-300 ease-in-out ${isOpen ? \"max-h-[1000px]\" : \"max-h-0\"}`}\r\n      >\r\n        <div className=\"absolute left-[13px] top-0 bottom-0 w-px bg-gray-300 dark:bg-gray-800\"></div>\r\n        {isFolder &&\r\n          isOpen &&\r\n          item.children &&\r\n          item.children.map((child: FileTreeItem) => (\r\n            <TreeNode\r\n              key={child.name}\r\n              item={child}\r\n              selectedFile={selectedFile}\r\n              onFileSelect={onFileSelect}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function FileTree() {\r\n  const [selectedFile, setSelectedFile] = useState(\"App.jsx\");\r\n\r\n  const handleFileSelect = (fileName: string) => {\r\n    setSelectedFile(fileName);\r\n    console.log(`Selected file: ${fileName}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"font-mono p-4 bg-white dark:bg-black rounded-lg border border-gray-200 dark:border-gray-800\">\r\n      <div className=\"w-full max-w-xs\">\r\n        {fileTreeData.map((item) => (\r\n          <TreeNode\r\n            key={item.name}\r\n            item={item}\r\n            selectedFile={selectedFile}\r\n            onFileSelect={handleFileSelect}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "filetree2.tsx",
      "content": "\"use client\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface FileTreeItem {\r\n  name: string;\r\n  type: \"file\" | \"folder\";\r\n  children?: FileTreeItem[];\r\n}\r\n\r\ninterface FolderIconProps {\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface ChevronIconProps {\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface TreeIconProps {\r\n  item: FileTreeItem;\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface TreeNodeProps {\r\n  item: FileTreeItem;\r\n  selectedFile: string;\r\n  onFileSelect: (fileName: string) => void;\r\n}\r\n\r\nconst FileIcon = () => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <path d=\"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\"></path>\r\n    <path d=\"M14 2v4a2 2 0 0 0 2 2h4\"></path>\r\n  </svg>\r\n);\r\n\r\nconst FolderIcon = ({ isOpen }: FolderIconProps) => (\r\n  <svg\r\n    className=\"w-5 h-5 mr-2 shrink-0\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    {isOpen ? (\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"2\"\r\n        d=\"M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z\"\r\n      />\r\n    ) : (\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"2\"\r\n        d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\r\n      />\r\n    )}\r\n  </svg>\r\n);\r\n\r\nconst ChevronIcon = ({ isOpen }: ChevronIconProps) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n    className={`w-4 h-4 text-gray-500 dark:text-gray-400 transition-transform duration-200 shrink-0 ${isOpen ? \"rotate-90\" : \"\"}`}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst fileTreeData: FileTreeItem[] = [\r\n  {\r\n    name: \"public\",\r\n    type: \"folder\",\r\n    children: [\r\n      { name: \"index.html\", type: \"file\" },\r\n      { name: \"favicon.ico\", type: \"file\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"src\",\r\n    type: \"folder\",\r\n    children: [\r\n      {\r\n        name: \"components\",\r\n        type: \"folder\",\r\n        children: [\r\n          { name: \"Button.jsx\", type: \"file\" },\r\n          { name: \"Modal.js\", type: \"file\" },\r\n        ],\r\n      },\r\n      {\r\n        name: \"hooks\",\r\n        type: \"folder\",\r\n        children: [{ name: \"useFetch.js\", type: \"file\" }],\r\n      },\r\n      { name: \"App.jsx\", type: \"file\" },\r\n      { name: \"index.js\", type: \"file\" },\r\n      { name: \"styles.css\", type: \"file\" },\r\n    ],\r\n  },\r\n  { name: \"package.json\", type: \"file\" },\r\n  { name: \"README.md\", type: \"file\" },\r\n];\r\n\r\nconst TreeIcon = ({ item, isOpen }: TreeIconProps) => {\r\n  if (item.type === \"folder\") {\r\n    return <FolderIcon isOpen={isOpen} />;\r\n  }\r\n  return <FileIcon />;\r\n};\r\n\r\nconst TreeNode = ({ item, selectedFile, onFileSelect }: TreeNodeProps) => {\r\n  const isFolder = item.type === \"folder\";\r\n  const [isOpen, setIsOpen] = useState(isFolder);\r\n\r\n  const handleToggle = () => {\r\n    if (isFolder) {\r\n      setIsOpen(!isOpen);\r\n    } else {\r\n      onFileSelect(item.name);\r\n    }\r\n  };\r\n\r\n  const isSelected = !isFolder && selectedFile === item.name;\r\n\r\n  return (\r\n    <div className=\"text-gray-700 dark:text-gray-300 relative\">\r\n      <div\r\n        className={`flex items-center py-1.5 px-2 rounded-md cursor-pointer transition-colors duration-150 ${\r\n          isSelected\r\n            ? \"bg-blue-100 dark:bg-blue-500/20 text-blue-700 dark:text-white\"\r\n            : \"hover:bg-gray-100 dark:hover:bg-gray-800\"\r\n        }`}\r\n        onClick={handleToggle}\r\n      >\r\n        <div className=\"flex items-center flex-grow\">\r\n          {isFolder ? (\r\n            <ChevronIcon isOpen={isOpen} />\r\n          ) : (\r\n            <div className=\"w-4 shrink-0\"></div>\r\n          )}\r\n          <div className=\"flex items-center ml-1\">\r\n            <TreeIcon item={item} isOpen={isOpen} />\r\n            <span className=\"text-sm ml-1.5\">{item.name}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`pl-4 relative overflow-hidden transition-all duration-300 ease-in-out ${isOpen ? \"max-h-[1000px]\" : \"max-h-0\"}`}\r\n      >\r\n        <div className=\"absolute left-[13px] top-0 bottom-0 w-px bg-gray-300 dark:bg-gray-800\"></div>\r\n        {isFolder &&\r\n          isOpen &&\r\n          item.children &&\r\n          item.children.map((child: FileTreeItem) => (\r\n            <TreeNode\r\n              key={child.name}\r\n              item={child}\r\n              selectedFile={selectedFile}\r\n              onFileSelect={onFileSelect}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function FileTree2() {\r\n  const [selectedFile, setSelectedFile] = useState(\"App.jsx\");\r\n\r\n  const handleFileSelect = (fileName: string) => {\r\n    setSelectedFile(fileName);\r\n    console.log(`Selected file: ${fileName}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"font-mono p-4 bg-white dark:bg-black rounded-lg border border-gray-200 dark:border-gray-800\">\r\n      <div className=\"w-full max-w-xs\">\r\n        {fileTreeData.map((item) => (\r\n          <TreeNode\r\n            key={item.name}\r\n            item={item}\r\n            selectedFile={selectedFile}\r\n            onFileSelect={handleFileSelect}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}