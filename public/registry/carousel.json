{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "carousel",
  "title": "Carousel",
  "description": "A minimalistic carousel component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "carousel.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion, PanInfo } from \"framer-motion\";\r\n\r\ninterface CardData {\r\n  id: number;\r\n  imageUrl: string;\r\n  title: string;\r\n}\r\n\r\ninterface IconProps {\r\n  className?: string;\r\n}\r\n\r\ninterface BadgeProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\ninterface CardProps {\r\n  card: CardData;\r\n  index: number;\r\n  activeIndex: number;\r\n  totalCards: number;\r\n}\r\n\r\nconst SparklesIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"M9.93 2.25 12 7.5l2.07-5.25a.5.5 0 0 1 .9 0L17.25 8.5l4.16.34a.5.5 0 0 1 .29.88l-3.2 3.1.95 4.5a.5.5 0 0 1-.73.53L12 14.5l-3.72 2.33a.5.5 0 0 1-.73-.53l.95-4.5-3.2-3.1a.5.5 0 0 1 .29-.88l4.16-.34Z\" />\r\n  </svg>\r\n);\r\n\r\nconst ChevronLeftIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"m15 18-6-6 6-6\" />\r\n  </svg>\r\n);\r\n\r\nconst ChevronRightIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"m9 18 6-6-6-6\" />\r\n  </svg>\r\n);\r\n\r\nconst Badge: React.FC<BadgeProps> = ({ children, className }) => (\r\n  <div\r\n    className={`inline-flex items-center gap-1.5 rounded-full border px-3 py-1.5 text-sm font-medium ${className}`}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst cardData: CardData[] = [\r\n  {\r\n    id: 1,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\r\n    title: \"Crimson Forest\",\r\n  },\r\n  {\r\n    id: 2,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\r\n    title: \"Misty Mountains\",\r\n  },\r\n  {\r\n    id: 3,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\r\n    title: \"Floating Islands\",\r\n  },\r\n  {\r\n    id: 4,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\r\n    title: \"Crystal Cave\",\r\n  },\r\n  {\r\n    id: 5,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\r\n    title: \"Sunset Peaks\",\r\n  },\r\n  {\r\n    id: 6,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\r\n    title: \"Night Sky\",\r\n  },\r\n  {\r\n    id: 7,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\r\n    title: \"Ancient Ruins\",\r\n  },\r\n  {\r\n    id: 8,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\r\n    title: \"Magical Tree\",\r\n  },\r\n  {\r\n    id: 9,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\r\n    title: \"Celestial Waters\",\r\n  },\r\n];\r\n\r\nexport default function Carousel() {\r\n  const [activeIndex, setActiveIndex] = useState(\r\n    Math.floor(cardData.length / 2)\r\n  );\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const autoplayIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const autoplayDelay = 3000;\r\n\r\n  const goToNext = () => {\r\n    setActiveIndex((prev) => (prev + 1) % cardData.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPaused) {\r\n      autoplayIntervalRef.current = setInterval(goToNext, autoplayDelay);\r\n    }\r\n    return () => {\r\n      if (autoplayIntervalRef.current) {\r\n        clearInterval(autoplayIntervalRef.current);\r\n      }\r\n    };\r\n  }, [isPaused, activeIndex]);\r\n\r\n  const changeSlide = (newIndex: number) => {\r\n    const newSafeIndex = (newIndex + cardData.length) % cardData.length;\r\n    setActiveIndex(newSafeIndex);\r\n    if (autoplayIntervalRef.current) {\r\n      clearInterval(autoplayIntervalRef.current);\r\n    }\r\n    if (!isPaused) {\r\n      autoplayIntervalRef.current = setInterval(goToNext, autoplayDelay);\r\n    }\r\n  };\r\n\r\n  const onDragEnd = (\r\n    event: MouseEvent | TouchEvent | PointerEvent,\r\n    info: PanInfo\r\n  ) => {\r\n    const dragThreshold = 75;\r\n    const dragOffset = info.offset.x;\r\n    if (dragOffset > dragThreshold) {\r\n      changeSlide(activeIndex - 1);\r\n    } else if (dragOffset < -dragThreshold) {\r\n      changeSlide(activeIndex + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"w-full flex-col items-center justify-center font-sans overflow-hidden\">\r\n      <div\r\n        className=\"w-full max-w-5xl mx-auto p-4\"\r\n        onMouseEnter={() => setIsPaused(true)}\r\n        onMouseLeave={() => setIsPaused(false)}\r\n      >\r\n        <div className=\"relative flex w-full flex-col rounded-3xl border border-white/10 dark:border-white/10 bg-white dark:bg-neutral-900 p-4 pt-6 md:p-6\">\r\n          <Badge className=\"absolute left-4 top-6 rounded-xl border border-gray-300 dark:border-white/10 text-base text-gray-700 dark:text-white/80 bg-gray-100/80 dark:bg-black/20 backdrop-blur-sm md:left-6\">\r\n            <SparklesIcon className=\"fill-[#EEBDE0] stroke-1 text-neutral-800 h-5 w-5 mr-1\" />\r\n            Enhanced Carousel\r\n          </Badge>\r\n\r\n          <div className=\"relative w-full h-[280px] md:h-[400px] flex items-center justify-center overflow-hidden pt-12\">\r\n            <motion.div\r\n              className=\"w-full h-full flex items-center justify-center\"\r\n              drag=\"x\"\r\n              dragConstraints={{ left: 0, right: 0 }}\r\n              dragElastic={0.2}\r\n              onDragEnd={onDragEnd}\r\n            >\r\n              {cardData.map((card, index) => (\r\n                <Card\r\n                  key={card.id}\r\n                  card={card}\r\n                  index={index}\r\n                  activeIndex={activeIndex}\r\n                  totalCards={cardData.length}\r\n                />\r\n              ))}\r\n            </motion.div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-center gap-6 mt-6\">\r\n            <button\r\n              onClick={() => changeSlide(activeIndex - 1)}\r\n              className=\"p-2 rounded-full bg-gray-100 dark:bg-white/5 hover:bg-gray-200 dark:hover:bg-white/10 border border-gray-300 dark:border-white/10 text-gray-700 dark:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n            >\r\n              <ChevronLeftIcon className=\"w-6 h-6\" />\r\n            </button>\r\n\r\n            <div className=\"flex items-center justify-center gap-2\">\r\n              {cardData.map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => changeSlide(index)}\r\n                  className={`h-2 rounded-full transition-all duration-300 focus:outline-none ${\r\n                    activeIndex === index\r\n                      ? \"w-6 bg-pink-400\"\r\n                      : \"w-2 bg-gray-300 dark:bg-neutral-600 hover:bg-gray-400 dark:hover:bg-neutral-500\"\r\n                  }`}\r\n                  aria-label={`Go to slide ${index + 1}`}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <button\r\n              onClick={() => changeSlide(activeIndex + 1)}\r\n              className=\"p-2 rounded-full bg-gray-100 dark:bg-white/5 hover:bg-gray-200 dark:hover:bg-white/10 border border-gray-300 dark:border-white/10 text-gray-700 dark:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n            >\r\n              <ChevronRightIcon className=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Card({ card, index, activeIndex, totalCards }: CardProps) {\r\n  let offset = index - activeIndex;\r\n  if (offset > totalCards / 2) {\r\n    offset -= totalCards;\r\n  } else if (offset < -totalCards / 2) {\r\n    offset += totalCards;\r\n  }\r\n\r\n  const isVisible = Math.abs(offset) <= 1;\r\n\r\n  const animate = {\r\n    x: `${offset * 50}%`,\r\n    scale: offset === 0 ? 1 : 0.8,\r\n    zIndex: totalCards - Math.abs(offset),\r\n    opacity: isVisible ? 1 : 0,\r\n    transition: { type: \"spring\" as const, stiffness: 260, damping: 30 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"absolute w-1/2 md:w-1/3 h-[95%]\"\r\n      style={{\r\n        transformStyle: \"preserve-3d\",\r\n      }}\r\n      animate={animate}\r\n      initial={false}\r\n    >\r\n      <div className=\"relative w-full h-full rounded-3xl shadow-2xl overflow-hidden bg-gray-200 dark:bg-neutral-800\">\r\n        <img\r\n          src={card.imageUrl}\r\n          alt={card.title}\r\n          className=\"w-full h-full object-cover pointer-events-none\"\r\n          onError={(e) => {\r\n            const target = e.target as HTMLImageElement;\r\n            target.onerror = null;\r\n            target.src =\r\n              \"https://placehold.co/400x600/1e1e1e/ffffff?text=Image+Missing\";\r\n          }}\r\n        />\r\n        <div className=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/70 to-transparent\">\r\n          <h4 className=\"text-white text-lg font-semibold\">{card.title}</h4>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "carousel2.tsx",
      "content": "\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Story {\r\n  id: number;\r\n  imageUrl: string;\r\n  title: string;\r\n}\r\n\r\nconst storiesData: Story[] = [\r\n  {\r\n    id: 1,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\r\n    title: \"Crimson Forest\",\r\n  },\r\n  {\r\n    id: 2,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\r\n    title: \"Misty Mountains\",\r\n  },\r\n  {\r\n    id: 3,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\r\n    title: \"Floating Islands\",\r\n  },\r\n  {\r\n    id: 4,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\r\n    title: \"Crystal Cave\",\r\n  },\r\n  {\r\n    id: 5,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\r\n    title: \"Sunset Peaks\",\r\n  },\r\n  {\r\n    id: 6,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\r\n    title: \"Night Sky\",\r\n  },\r\n  {\r\n    id: 7,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\r\n    title: \"Ancient Ruins\",\r\n  },\r\n  {\r\n    id: 8,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\r\n    title: \"Magical Tree\",\r\n  },\r\n  {\r\n    id: 9,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\r\n    title: \"Celestial Waters\",\r\n  },\r\n];\r\n\r\nconst StoryCard = ({ story }: { story: Story }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"relative w-72 h-96 flex-shrink-0 rounded-lg overflow-hidden shadow-xl group\"\r\n      whileHover={{ y: -8, transition: { type: \"spring\", stiffness: 300 } }}\r\n    >\r\n      <img\r\n        src={story.imageUrl}\r\n        alt={story.title}\r\n        className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 pointer-events-none\"\r\n      />\r\n\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"></div>\r\n\r\n      <div className=\"relative z-10 flex flex-col justify-end h-full p-6 text-white\">\r\n        <h3 className=\"font-bold text-2xl tracking-wide\">{story.title}</h3>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default function CarouselCards() {\r\n  const trackRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [dragConstraint, setDragConstraint] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculateConstraints = () => {\r\n      if (containerRef.current && trackRef.current) {\r\n        const containerWidth = containerRef.current.offsetWidth;\r\n        const trackWidth = trackRef.current.scrollWidth;\r\n        setDragConstraint(containerWidth - trackWidth);\r\n      }\r\n    };\r\n\r\n    calculateConstraints();\r\n    window.addEventListener(\"resize\", calculateConstraints);\r\n\r\n    return () => window.removeEventListener(\"resize\", calculateConstraints);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"font-sans w-full py-12 md:py-20 flex flex-col items-center justify-center\">\r\n      <div className=\"w-full max-w-7xl mx-auto px-4\">\r\n        <header className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold text-white\">\r\n            Explore Worlds\r\n          </h1>\r\n          <p className=\"mt-4 text-lg text-gray-400\">\r\n            Drag to journey through magical landscapes.\r\n          </p>\r\n        </header>\r\n\r\n        <motion.div\r\n          ref={containerRef}\r\n          className=\"overflow-hidden cursor-grab\"\r\n          whileTap={{ cursor: \"grabbing\" }}\r\n        >\r\n          <motion.div\r\n            ref={trackRef}\r\n            className=\"flex space-x-6 pb-6 px-4\"\r\n            drag=\"x\"\r\n            dragConstraints={{\r\n              right: 0,\r\n              left: dragConstraint - 32,\r\n            }}\r\n            dragElastic={0.15}\r\n          >\r\n            {storiesData.map((story) => (\r\n              <StoryCard key={story.id} story={story} />\r\n            ))}\r\n          </motion.div>\r\n        </motion.div>\r\n\r\n        <div className=\"mt-10 flex items-center justify-center\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-gray-300 font-semibold hover:text-white transition-colors duration-300 group\"\r\n          >\r\n            Discover More\r\n            <span className=\"inline-block transition-transform duration-300 group-hover:translate-x-1 ml-1\">\r\n              &rarr;\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "enhanced-carousel.tsx",
      "content": "\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Story {\r\n  id: number;\r\n  imageUrl: string;\r\n  title: string;\r\n}\r\n\r\nconst storiesData: Story[] = [\r\n  {\r\n    id: 1,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\r\n    title: \"Crimson Forest\",\r\n  },\r\n  {\r\n    id: 2,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\r\n    title: \"Misty Mountains\",\r\n  },\r\n  {\r\n    id: 3,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\r\n    title: \"Floating Islands\",\r\n  },\r\n  {\r\n    id: 4,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\r\n    title: \"Crystal Cave\",\r\n  },\r\n  {\r\n    id: 5,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\r\n    title: \"Sunset Peaks\",\r\n  },\r\n  {\r\n    id: 6,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\r\n    title: \"Night Sky\",\r\n  },\r\n  {\r\n    id: 7,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\r\n    title: \"Ancient Ruins\",\r\n  },\r\n  {\r\n    id: 8,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\r\n    title: \"Magical Tree\",\r\n  },\r\n  {\r\n    id: 9,\r\n    imageUrl:\r\n      \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\r\n    title: \"Celestial Waters\",\r\n  },\r\n];\r\n\r\nconst StoryCard = ({ story }: { story: Story }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"relative w-72 h-96 flex-shrink-0 rounded-lg overflow-hidden shadow-xl group\"\r\n      whileHover={{ y: -8, transition: { type: \"spring\", stiffness: 300 } }}\r\n    >\r\n      <img\r\n        src={story.imageUrl}\r\n        alt={story.title}\r\n        className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 pointer-events-none\"\r\n      />\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"></div>\r\n      <div className=\"relative z-10 flex flex-col justify-end h-full p-6 text-white\">\r\n        <h3 className=\"font-bold text-2xl tracking-wide\">{story.title}</h3>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default function CarouselCards() {\r\n  const trackRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [dragConstraint, setDragConstraint] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculateConstraints = () => {\r\n      if (containerRef.current && trackRef.current) {\r\n        const containerWidth = containerRef.current.offsetWidth;\r\n        const trackWidth = trackRef.current.scrollWidth;\r\n        setDragConstraint(containerWidth - trackWidth);\r\n      }\r\n    };\r\n\r\n    calculateConstraints();\r\n    window.addEventListener(\"resize\", calculateConstraints);\r\n\r\n    return () => window.removeEventListener(\"resize\", calculateConstraints);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"font-sans w-full py-12 md:py-20 flex flex-col items-center justify-center\">\r\n      <div className=\"w-full max-w-7xl mx-auto px-4\">\r\n        <header className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold text-black dark:text-white \">\r\n            Explore Worlds\r\n          </h1>\r\n          <p className=\"mt-4 text-lg text-gray-400\">\r\n            Drag to journey through magical landscapes.\r\n          </p>\r\n        </header>\r\n\r\n        <motion.div\r\n          ref={containerRef}\r\n          className=\"overflow-hidden cursor-grab\"\r\n          whileTap={{ cursor: \"grabbing\" }}\r\n        >\r\n          <motion.div\r\n            ref={trackRef}\r\n            className=\"flex space-x-6 pb-6 px-4\"\r\n            drag=\"x\"\r\n            dragConstraints={{\r\n              right: 0,\r\n              left: dragConstraint - 32,\r\n            }}\r\n            dragElastic={0.15}\r\n          >\r\n            {storiesData.map((story) => (\r\n              <StoryCard key={story.id} story={story} />\r\n            ))}\r\n          </motion.div>\r\n        </motion.div>\r\n\r\n        <div className=\"mt-10 flex items-center justify-center\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-gray-300 font-semibold hover:text-white transition-colors duration-300 group\"\r\n          >\r\n            Discover More\r\n            <span className=\"inline-block transition-transform duration-300 group-hover:translate-x-1 ml-1\">\r\n              &rarr;\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "imagecarousel.tsx",
      "content": "\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst classNames = (\r\n  ...classes: (string | boolean | undefined | null)[]\r\n): string => {\r\n  return classes.filter(Boolean).join(\" \");\r\n};\r\n\r\ninterface Person {\r\n  name: string;\r\n  title: string;\r\n  img: string;\r\n}\r\n\r\nconst persons: Person[] = [\r\n  {\r\n    name: \"Aria Rossi\",\r\n    title: \"Lead Architect\",\r\n    img: \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\r\n  },\r\n  {\r\n    name: \"Leo Carter\",\r\n    title: \"Creative Director\",\r\n    img: \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\r\n  },\r\n  {\r\n    name: \"Mia Chen\",\r\n    title: \"Senior Developer\",\r\n    img: \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\r\n  },\r\n  {\r\n    name: \"Kai Tanaka\",\r\n    title: \"UX/UI Designer\",\r\n    img: \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\r\n  },\r\n  {\r\n    name: \"Zoe Williams\",\r\n    title: \"Project Manager\",\r\n    img: \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\r\n  },\r\n  {\r\n    name: \"Ethan Hunt\",\r\n    title: \"Marketing Head\",\r\n    img: \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\r\n  },\r\n  {\r\n    name: \"Chloe Garcia\",\r\n    title: \"Data Scientist\",\r\n    img: \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\r\n  },\r\n  {\r\n    name: \"Noah King\",\r\n    title: \"Brand Strategist\",\r\n    img: \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\r\n  },\r\n  {\r\n    name: \"Ava Martinez\",\r\n    title: \"Content Creator\",\r\n    img: \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\r\n  },\r\n];\r\n\r\nfunction ImageCarousel() {\r\n  const [activeItem, setActiveItem] = useState(Math.floor(persons.length / 2));\r\n  const wrapperRef = useRef<HTMLUListElement>(null);\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!wrapperRef.current) return;\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    wrapperRef.current.style.setProperty(\r\n      \"--transition\",\r\n      \"600ms cubic-bezier(0.22, 0.61, 0.36, 1)\"\r\n    );\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      wrapperRef.current?.style.removeProperty(\"--transition\");\r\n    }, 900);\r\n\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, [activeItem]);\r\n\r\n  return (\r\n    <div className=\"w-full font-sans\">\r\n      <div className=\"w-full max-w-7xl p-4 sm:p-6 md:p-8\">\r\n        <ul\r\n          ref={wrapperRef}\r\n          className=\"flex w-full flex-col gap-2 md:h-[640px] md:flex-row md:gap-[1.5%]\"\r\n        >\r\n          {persons.map((person, index) => (\r\n            <li\r\n              onClick={() => setActiveItem(index)}\r\n              aria-current={activeItem === index}\r\n              className={classNames(\r\n                \"relative group cursor-pointer transition-all duration-500 ease-in-out\",\r\n                \"md:w-[8%]\",\r\n                \"md:[&[aria-current='true']]:w-[48%]\",\r\n                \"md:[transition:width_var(--transition,300ms_ease_in)]\"\r\n              )}\r\n              key={person.name}\r\n            >\r\n              <div className=\"relative h-full w-full overflow-hidden rounded-2xl bg-black shadow-2xl transition-transform duration-500 ease-in-out group-hover:scale-105 group-hover:z-10 transform-gpu\">\r\n                <img\r\n                  className={classNames(\r\n                    \"absolute left-1/2 top-1/2 h-full w-auto max-w-none -translate-x-1/2 -translate-y-1/2 object-cover transition-all duration-500 ease-in-out\",\r\n                    activeItem === index\r\n                      ? \"scale-105 grayscale-0\"\r\n                      : \"scale-100 grayscale\"\r\n                  )}\r\n                  src={person.img}\r\n                  alt={person.name}\r\n                  width=\"590\"\r\n                  height=\"640\"\r\n                />\r\n                <div\r\n                  className={classNames(\r\n                    \"absolute inset-0 transition-opacity duration-500\",\r\n                    activeItem === index ? \"opacity-100\" : \"opacity-0\",\r\n                    \"bg-gradient-to-t from-black/70 via-black/30 to-transparent\",\r\n                    \"md:absolute\"\r\n                  )}\r\n                />\r\n                <div\r\n                  className={classNames(\r\n                    \"absolute bottom-0 left-0 w-full p-6 text-white transition-[transform,opacity] duration-700 ease-in-out md:p-8\",\r\n                    activeItem === index\r\n                      ? \"translate-y-0 opacity-100\"\r\n                      : \"translate-y-8 opacity-0\"\r\n                  )}\r\n                >\r\n                  <p className=\"text-sm font-light uppercase tracking-widest text-gray-200 md:text-base\">\r\n                    {person.title}\r\n                  </p>\r\n                  <p\r\n                    className=\"text-2xl font-bold tracking-tight md:text-5xl\"\r\n                    style={{ textShadow: \"2px 2px 8px rgba(0,0,0,0.8)\" }}\r\n                  >\r\n                    {person.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCarousel;\r\n",
      "type": "registry:ui"
    }
  ]
}