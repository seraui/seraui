{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "doctabs",
  "title": "Doctabs",
  "description": "A minimalistic doctabs component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "doctabs.tsx",
      "content": "\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst HomeIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" />\r\n    <polyline points=\"9 22 9 12 15 12 15 22\" />\r\n  </svg>\r\n);\r\nconst UserIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\r\n    <circle cx=\"12\" cy=\"7\" r=\"4\" />\r\n  </svg>\r\n);\r\nconst SettingsIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 0 2l-.15.08a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.38a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1 0-2l.15-.08a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\" />\r\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n  </svg>\r\n);\r\nconst MailIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\"></rect>\r\n    <path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"></path>\r\n  </svg>\r\n);\r\n\r\ninterface Tab {\r\n  title: string;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  type?: never;\r\n}\r\ninterface Separator {\r\n  type: \"separator\";\r\n  title?: never;\r\n  icon?: never;\r\n}\r\ntype TabItem = Tab | Separator;\r\ninterface ExpandedTabsProps {\r\n  tabs: TabItem[];\r\n  className?: string;\r\n  onChange?: (index: number | null) => void;\r\n}\r\n\r\nconst spanVariants = {\r\n  initial: { width: 0, opacity: 0 },\r\n  animate: {\r\n    width: \"auto\",\r\n    opacity: 1,\r\n    transition: { delay: 0.05, duration: 0.2, ease: \"easeOut\" as const },\r\n  },\r\n  exit: {\r\n    width: 0,\r\n    opacity: 0,\r\n    transition: { duration: 0.1, ease: \"easeIn\" as const },\r\n  },\r\n};\r\n\r\nfunction ExpandedTabs({ tabs, className, onChange }: ExpandedTabsProps) {\r\n  const [selected, setSelected] = useState<number | null>(0);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        containerRef.current &&\r\n        !containerRef.current.contains(event.target as Node)\r\n      ) {\r\n        setSelected(null);\r\n        if (onChange) onChange(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, [onChange]);\r\n\r\n  const handleSelect = (index: number) => {\r\n    setSelected(index);\r\n    if (onChange) onChange(index);\r\n  };\r\n\r\n  const SeparatorComponent = () => (\r\n    <div\r\n      className=\"h-7 w-px bg-slate-200 dark:bg-slate-700\"\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`flex items-center gap-1 rounded-full border border-slate-200 bg-white/70 dark:bg-black dark:border-slate-700 p-1 shadow-md backdrop-blur-sm ${className || \"\"}`}\r\n    >\r\n      {tabs.map((tab, index) => {\r\n        if (tab.type === \"separator\") {\r\n          return <SeparatorComponent key={`separator-${index}`} />;\r\n        }\r\n\r\n        const Icon = tab.icon;\r\n        const isSelected = selected === index;\r\n\r\n        return (\r\n          <button\r\n            key={tab.title}\r\n            onClick={() => handleSelect(index)}\r\n            className={`relative z-10 flex items-center rounded-full px-4 py-2 text-sm font-medium transition-colors focus:outline-none \r\n              ${\r\n                isSelected\r\n                  ? \"text-slate-900 dark:text-green-300\"\r\n                  : \"text-slate-600 dark:text-slate-300 hover:text-slate-800 dark:hover:text-slate-100\"\r\n              }\r\n            `}\r\n          >\r\n            {isSelected && (\r\n              <motion.div\r\n                layoutId=\"pill\"\r\n                className=\"absolute inset-0 z-0 rounded-full bg-white dark:bg-green-500/20 backdrop-blur-sm border border-green-400/30 shadow-sm\"\r\n                transition={{ type: \"spring\", stiffness: 500, damping: 40 }}\r\n              />\r\n            )}\r\n\r\n            <span className=\"relative z-10 flex items-center gap-2\">\r\n              <Icon className=\"h-5 w-5 flex-shrink-0\" />\r\n              <AnimatePresence initial={false}>\r\n                {isSelected && (\r\n                  <motion.span\r\n                    variants={spanVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"exit\"\r\n                    className=\"overflow-hidden whitespace-nowrap\"\r\n                  >\r\n                    {tab.title}\r\n                  </motion.span>\r\n                )}\r\n              </AnimatePresence>\r\n            </span>\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Tabs2() {\r\n  const TABS: TabItem[] = [\r\n    { title: \"Home\", icon: HomeIcon },\r\n    { title: \"Profile\", icon: UserIcon },\r\n    { title: \"Messages\", icon: MailIcon },\r\n    { type: \"separator\" },\r\n    { title: \"Settings\", icon: SettingsIcon },\r\n  ];\r\n\r\n  return <ExpandedTabs tabs={TABS} />;\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "doctabs-gradient.tsx",
      "content": "\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst StarIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <polygon points=\"12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26\" />\r\n  </svg>\r\n);\r\n\r\nconst HeartIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\r\n  </svg>\r\n);\r\n\r\nconst ZapIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <polygon points=\"13,2 3,14 12,14 11,22 21,10 12,10 13,2\" />\r\n  </svg>\r\n);\r\n\r\nconst MusicIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"M9 18V5l12-2v13\" />\r\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\r\n    <circle cx=\"18\" cy=\"16\" r=\"3\" />\r\n  </svg>\r\n);\r\n\r\nconst CameraIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className={className}\r\n  >\r\n    <path d=\"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z\" />\r\n    <circle cx=\"12\" cy=\"13\" r=\"3\" />\r\n  </svg>\r\n);\r\n\r\ninterface Tab {\r\n  id: string;\r\n  title: string;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  description: string;\r\n  gradient: string;\r\n}\r\n\r\ninterface GradientTabsProps {\r\n  tabs: Tab[];\r\n  className?: string;\r\n}\r\n\r\nexport default function GradientTabs({ tabs, className }: GradientTabsProps) {\r\n  const [activeTab, setActiveTab] = useState(tabs[0].id);\r\n\r\n  return (\r\n    <div className={`w-full max-w-4xl mx-auto ${className || \"\"}`}>\r\n      {/* Tab Navigation */}\r\n      <div className=\"flex justify-center mb-8\">\r\n        <div className=\"flex rounded-2xl bg-slate-100/50 p-1 backdrop-blur-sm dark:bg-slate-800/50\">\r\n          {tabs.map((tab) => {\r\n            const Icon = tab.icon;\r\n            const isActive = activeTab === tab.id;\r\n\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`relative flex items-center gap-2 rounded-xl px-4 py-2.5 text-sm font-medium transition-all duration-300 ${\r\n                  isActive\r\n                    ? \"text-white shadow-lg\"\r\n                    : \"text-slate-600 hover:text-slate-900 dark:text-slate-300 dark:hover:text-slate-100\"\r\n                }`}\r\n              >\r\n                {isActive && (\r\n                  <motion.div\r\n                    layoutId=\"gradientTab\"\r\n                    className={`absolute inset-0 rounded-xl ${tab.gradient}`}\r\n                    transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\r\n                  />\r\n                )}\r\n\r\n                <div className=\"relative z-10 flex items-center gap-2\">\r\n                  <Icon className=\"h-4 w-4\" />\r\n                  <span>{tab.title}</span>\r\n                </div>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Area */}\r\n      <div className=\"relative\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {tabs.map((tab) => {\r\n            if (activeTab !== tab.id) return null;\r\n\r\n            return (\r\n              <motion.div\r\n                key={tab.id}\r\n                initial={{ opacity: 0, scale: 0.95 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.95 }}\r\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\r\n                className=\"relative\"\r\n              >\r\n                {/* Background gradient */}\r\n                <div\r\n                  className={`absolute inset-0 rounded-3xl ${tab.gradient} opacity-10 blur-3xl`}\r\n                />\r\n\r\n                {/* Content card */}\r\n                <div className=\"relative rounded-3xl border border-slate-200 bg-white/80 p-8 shadow-xl backdrop-blur-sm dark:border-slate-700 dark:bg-slate-900/80\">\r\n                  <div className=\"flex items-start gap-4\">\r\n                    <div\r\n                      className={`rounded-2xl p-3 ${tab.gradient} bg-opacity-20`}\r\n                    >\r\n                      <tab.icon className=\"h-8 w-8 text-white\" />\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <h2 className=\"mb-2 text-2xl font-bold text-slate-900 dark:text-slate-100\">\r\n                        {tab.title}\r\n                      </h2>\r\n                      <p className=\"text-lg text-slate-600 dark:text-slate-300\">\r\n                        {tab.description}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Decorative elements */}\r\n                  <div className=\"mt-6 flex gap-2\">\r\n                    {[...Array(3)].map((_, i) => (\r\n                      <motion.div\r\n                        key={i}\r\n                        className={`h-2 w-2 rounded-full ${tab.gradient.replace(\"bg-gradient-to-r\", \"bg-gradient-to-br\")}`}\r\n                        initial={{ scale: 0 }}\r\n                        animate={{ scale: 1 }}\r\n                        transition={{ delay: i * 0.1 }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Demo component\r\nexport function GradientTabsDemo() {\r\n  const tabs: Tab[] = [\r\n    {\r\n      id: \"favorites\",\r\n      title: \"Favorites\",\r\n      icon: StarIcon,\r\n      description:\r\n        \"Your most loved and cherished items, carefully curated just for you. Discover what makes your collection special.\",\r\n      gradient: \"bg-gradient-to-r from-yellow-400 to-orange-500\",\r\n    },\r\n    {\r\n      id: \"love\",\r\n      title: \"Love\",\r\n      icon: HeartIcon,\r\n      description:\r\n        \"Things that bring joy to your heart. A collection of moments and memories that make life beautiful.\",\r\n      gradient: \"bg-gradient-to-r from-pink-400 to-red-500\",\r\n    },\r\n    {\r\n      id: \"energy\",\r\n      title: \"Energy\",\r\n      icon: ZapIcon,\r\n      description:\r\n        \"High-powered content that electrifies and energizes. Get ready for an explosive experience.\",\r\n      gradient: \"bg-gradient-to-r from-blue-400 to-purple-500\",\r\n    },\r\n    {\r\n      id: \"music\",\r\n      title: \"Music\",\r\n      icon: MusicIcon,\r\n      description:\r\n        \"Harmonious melodies and rhythmic beats that move your soul. Let the music take you away.\",\r\n      gradient: \"bg-gradient-to-r from-green-400 to-teal-500\",\r\n    },\r\n    {\r\n      id: \"photos\",\r\n      title: \"Photos\",\r\n      icon: CameraIcon,\r\n      description:\r\n        \"Captured moments frozen in time. Every picture tells a story worth remembering forever.\",\r\n      gradient: \"bg-gradient-to-r from-indigo-400 to-blue-500\",\r\n    },\r\n  ];\r\n\r\n  return <GradientTabs tabs={tabs} />;\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "doctabs-vertical.tsx",
      "content": "'use client';\r\nimport React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n// Icon components\r\nconst DashboardIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}>\r\n    <rect width=\"7\" height=\"9\" x=\"3\" y=\"3\" rx=\"1\"/>\r\n    <rect width=\"7\" height=\"5\" x=\"14\" y=\"3\" rx=\"1\"/>\r\n    <rect width=\"7\" height=\"9\" x=\"14\" y=\"12\" rx=\"1\"/>\r\n    <rect width=\"7\" height=\"5\" x=\"3\" y=\"16\" rx=\"1\"/>\r\n  </svg>\r\n);\r\n\r\nconst AnalyticsIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}>\r\n    <path d=\"M3 3v18h18\"/>\r\n    <path d=\"m19 9-5 5-4-4-3 3\"/>\r\n  </svg>\r\n);\r\n\r\nconst UsersIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}>\r\n    <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"/>\r\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\r\n    <path d=\"m22 21-2-2\"/>\r\n    <path d=\"M16 16.28A13.84 13.84 0 0 1 22 21\"/>\r\n  </svg>\r\n);\r\n\r\nconst FileIcon = ({ className = \"w-5 h-5\" }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className}>\r\n    <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/>\r\n    <polyline points=\"14,2 14,8 20,8\"/>\r\n  </svg>\r\n);\r\n\r\ninterface Tab {\r\n  id: string;\r\n  title: string;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  content: string;\r\n  badge?: number;\r\n}\r\n\r\ninterface VerticalTabsProps {\r\n  tabs: Tab[];\r\n  className?: string;\r\n}\r\n\r\nexport default function VerticalTabs({ tabs, className }: VerticalTabsProps) {\r\n  const [activeTab, setActiveTab] = useState(tabs[0].id);\r\n\r\n  return (\r\n    <div className={`flex h-80 w-full max-w-4xl rounded-lg border border-slate-200/20 bg-white/80 shadow-lg backdrop-blur-md dark:border-slate-700/30 dark:bg-black/40 ${className || ''}`}>\r\n      {/* Sidebar */}\r\n      <div className=\"w-64 border-r border-slate-200/20 bg-slate-50/50 p-4 backdrop-blur-sm dark:border-slate-700/30 dark:bg-black/20\">\r\n        <div className=\"space-y-2\">\r\n          {tabs.map((tab) => {\r\n            const Icon = tab.icon;\r\n            const isActive = activeTab === tab.id;\r\n            \r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`group relative flex w-full items-center gap-3 rounded-lg px-3 py-2.5 text-left transition-all duration-200 ${\r\n                  isActive\r\n                    ? \"bg-white/80 text-blue-600 shadow-sm backdrop-blur-sm dark:bg-black/60 dark:text-blue-400 dark:shadow-blue-500/10\"\r\n                    : \"text-slate-600 hover:bg-white/60 hover:text-slate-900 dark:text-slate-300 dark:hover:bg-black/40 dark:hover:text-slate-100\"\r\n                }`}\r\n              >\r\n                {isActive && (\r\n                  <motion.div\r\n                    layoutId=\"activeTab\"\r\n                    className=\"absolute inset-0 rounded-lg bg-blue-50/80 backdrop-blur-sm dark:bg-blue-500/10 dark:backdrop-blur-md\"\r\n                    transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\r\n                  />\r\n                )}\r\n                \r\n                <div className=\"relative z-10 flex items-center gap-3\">\r\n                  <Icon className={`h-5 w-5 transition-colors ${\r\n                    isActive ? \"text-blue-600 dark:text-blue-400\" : \"text-slate-500 group-hover:text-slate-700 dark:text-slate-400 dark:group-hover:text-slate-200\"\r\n                  }`} />\r\n                  <span className=\"font-medium\">{tab.title}</span>\r\n                  {tab.badge && (\r\n                    <span className=\"ml-auto rounded-full bg-blue-100/80 px-2 py-0.5 text-xs font-medium text-blue-600 backdrop-blur-sm dark:bg-blue-500/20 dark:text-blue-400 dark:backdrop-blur-md\">\r\n                      {tab.badge}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"flex-1 p-6\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {tabs.map((tab) => {\r\n            if (activeTab !== tab.id) return null;\r\n            \r\n            return (\r\n              <motion.div\r\n                key={tab.id}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -10 }}\r\n                transition={{ duration: 0.2 }}\r\n                className=\"h-full\"\r\n              >\r\n                <h2 className=\"mb-4 text-2xl font-bold text-slate-900 dark:text-slate-100\">\r\n                  {tab.title}\r\n                </h2>\r\n                <p className=\"text-slate-600 dark:text-slate-300\">\r\n                  {tab.content}\r\n                </p>\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Demo component\r\nexport function VerticalTabsDemo() {\r\n  const tabs: Tab[] = [\r\n    {\r\n      id: \"dashboard\",\r\n      title: \"Dashboard\",\r\n      icon: DashboardIcon,\r\n      content: \"Welcome to your dashboard! Here you can view an overview of all your important metrics and recent activity. The dashboard provides a comprehensive view of your data and performance indicators.\",\r\n      badge: 3\r\n    },\r\n    {\r\n      id: \"analytics\",\r\n      title: \"Analytics\",\r\n      icon: AnalyticsIcon,\r\n      content: \"Dive deep into your analytics data. View detailed reports, trends, and insights about your performance. Track key metrics and identify opportunities for growth and optimization.\",\r\n      badge: 12\r\n    },\r\n    {\r\n      id: \"users\",\r\n      title: \"Users\",\r\n      icon: UsersIcon,\r\n      content: \"Manage your user base effectively. View user profiles, activity logs, and engagement metrics. Monitor user behavior and implement strategies to improve user experience.\",\r\n    },\r\n    {\r\n      id: \"files\",\r\n      title: \"Files\",\r\n      icon: FileIcon,\r\n      content: \"Organize and manage your files efficiently. Upload, download, and share documents with your team. Keep everything organized with our intuitive file management system.\",\r\n      badge: 5\r\n    }\r\n  ];\r\n\r\n  return <VerticalTabs tabs={tabs} />;\r\n} ",
      "type": "registry:ui"
    }
  ]
}