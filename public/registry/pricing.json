{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing",
  "title": "Pricing",
  "description": "A minimalistic pricing component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "pricing.tsx",
      "content": "'use client'\r\nimport React from 'react';\r\n\r\n// TypeScript interfaces\r\ninterface PricingFeature {\r\n  text: string;\r\n  included: boolean;\r\n}\r\n\r\ninterface PricingPlan {\r\n  name: string;\r\n  price: string;\r\n  pricePeriod: string | null;\r\n  description: string;\r\n  features: PricingFeature[];\r\n  buttonText: string;\r\n  isPopular: boolean;\r\n}\r\n\r\ninterface PricingCardProps {\r\n  plan: PricingPlan;\r\n}\r\n\r\n// SVG Icon for included features\r\nconst CheckIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-5 w-5 text-green-500 dark:text-green-400 mr-3 flex-shrink-0\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// SVG Icon for excluded features\r\nconst TimesIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-5 w-5 text-gray-400 dark:text-gray-500 mr-3 flex-shrink-0\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Data for the pricing plans\r\nconst pricingPlans: PricingPlan[] = [\r\n  {\r\n    name: 'Starter',\r\n    price: '$19',\r\n    pricePeriod: '/month',\r\n    description: 'Perfect for individuals and small teams starting out.',\r\n    features: [\r\n      { text: 'Up to 3 users', included: true },\r\n      { text: 'Basic automations', included: true },\r\n      { text: '5GB storage', included: true },\r\n      { text: 'Advanced analytics', included: false },\r\n      { text: 'Priority support', included: false },\r\n    ],\r\n    buttonText: 'Get Started',\r\n    isPopular: false,\r\n  },\r\n  {\r\n    name: 'Professional',\r\n    price: '$49',\r\n    pricePeriod: '/month',\r\n    description: 'For growing teams that need more power and features.',\r\n    features: [\r\n      { text: 'Up to 10 users', included: true },\r\n      { text: 'Advanced automations', included: true },\r\n      { text: '50GB storage', included: true },\r\n      { text: 'AI-powered analytics', included: true },\r\n      { text: 'Priority support', included: true },\r\n    ],\r\n    buttonText: 'Start Free Trial',\r\n    isPopular: true,\r\n  },\r\n  {\r\n    name: 'Enterprise',\r\n    price: 'Custom',\r\n    pricePeriod: null,\r\n    description: 'For large organizations with complex needs and scale.',\r\n    features: [\r\n      { text: 'Unlimited users', included: true },\r\n      { text: 'Custom automations & SSO', included: true },\r\n      { text: 'Unlimited storage', included: true },\r\n      { text: 'Advanced analytics & reporting', included: true },\r\n      { text: '24/7 dedicated support', included: true },\r\n    ],\r\n    buttonText: 'Contact Sales',\r\n    isPopular: false,\r\n  },\r\n];\r\n\r\n// Individual Pricing Card Component\r\nconst PricingCard: React.FC<PricingCardProps> = ({ plan }) => {\r\n  const cardClasses = `\r\n    pricing-card bg-white/80 dark:bg-zinc-900/80 backdrop-blur-xl\r\n    border rounded-2xl p-6 md:p-8 flex flex-col transition-all duration-300\r\n    hover:-translate-y-1 hover:shadow-xl dark:hover:shadow-2xl\r\n    ${plan.isPopular\r\n      ? 'border-2 border-indigo-500 dark:border-indigo-400 relative shadow-lg shadow-indigo-500/20 dark:shadow-indigo-400/20'\r\n      : 'border-gray-200 dark:border-zinc-700 hover:border-gray-300 dark:hover:border-zinc-600'\r\n    }\r\n  `;\r\n\r\n  const buttonClasses = `\r\n    w-full py-3 px-6 rounded-lg font-medium mt-auto transition-all duration-300\r\n    border border-transparent focus:outline-none focus:ring-2 focus:ring-offset-2\r\n    ${plan.isPopular\r\n      ? 'bg-indigo-500 dark:bg-indigo-600 text-white shadow-lg shadow-indigo-500/30 dark:shadow-indigo-600/30 hover:bg-indigo-600 dark:hover:bg-indigo-700 focus:ring-indigo-500 dark:focus:ring-indigo-400'\r\n      : `\r\n        bg-white/70 dark:bg-zinc-800/70 hover:bg-white dark:hover:bg-zinc-800\r\n        text-slate-800 dark:text-zinc-200\r\n        border border-slate-200 dark:border-zinc-600\r\n        backdrop-blur-sm hover:shadow-md dark:hover:shadow-lg\r\n        focus:ring-slate-500 dark:focus:ring-zinc-400\r\n       `\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div className={cardClasses}>\r\n      {plan.isPopular && (\r\n        <div className=\"absolute top-0 right-4 -mt-3 bg-indigo-500 dark:bg-indigo-600 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md\">\r\n          MOST POPULAR\r\n        </div>\r\n      )}\r\n      <h3 className=\"text-2xl font-bold text-gray-800 dark:text-zinc-100 mb-4\">{plan.name}</h3>\r\n      <p className=\"text-gray-800 dark:text-zinc-100 text-4xl font-bold mb-2\">\r\n        {plan.price}\r\n        {plan.pricePeriod && (\r\n          <span className=\"text-lg text-gray-500 dark:text-zinc-400 font-medium\">{plan.pricePeriod}</span>\r\n        )}\r\n      </p>\r\n      <p className=\"text-gray-600 dark:text-zinc-400 mb-8 text-sm h-10\">{plan.description}</p>\r\n      <ul className=\"space-y-4 mb-8\">\r\n        {plan.features.map((feature: PricingFeature, index: number) => (\r\n          <li\r\n            key={index}\r\n            className={`flex items-center ${\r\n              feature.included\r\n                ? 'text-gray-700 dark:text-zinc-300'\r\n                : 'text-gray-400 dark:text-zinc-500'\r\n            }`}\r\n          >\r\n            {feature.included ? <CheckIcon /> : <TimesIcon />}\r\n            <span>{feature.text}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button className={buttonClasses}>\r\n        {plan.buttonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// Main Pricing Section Component\r\nconst PricingSection: React.FC = () => {\r\n  return (\r\n    <section id=\"pricing\" className=\"relative py-16 sm:py-24 overflow-hidden\">\r\n      {/* Subtle pattern overlay */}\r\n      <div className=\"absolute inset-0 opacity-30 dark:opacity-20\">\r\n        <div\r\n          className=\"absolute inset-0\"\r\n          style={{\r\n            backgroundImage: `\r\n              radial-gradient(circle at 25% 25%, rgba(99, 102, 241, 0.1) 0%, transparent 50%),\r\n              radial-gradient(circle at 75% 75%, rgba(168, 85, 247, 0.1) 0%, transparent 50%)\r\n            `\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"relative container mx-auto px-4\">\r\n        <div className=\"text-center max-w-4xl mx-auto mb-12 md:mb-16\">\r\n          <h2 className=\"text-3xl md:text-5xl font-bold text-gray-900 dark:text-zinc-100 mb-6 tracking-tight\">\r\n            Simple, Transparent Pricing\r\n          </h2>\r\n          <p className=\"text-lg md:text-xl text-gray-600 dark:text-zinc-400 max-w-2xl mx-auto\">\r\n            Choose the plan that works best for your team. No hidden fees, no surprises.\r\n            Start with a free trial and scale as you grow.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\">\r\n          {pricingPlans.map((plan: PricingPlan, index: number) => (\r\n            <PricingCard key={index} plan={plan} />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Additional info section */}\r\n        <div className=\"text-center mt-16 max-w-3xl mx-auto\">\r\n          <p className=\"text-sm text-gray-500 dark:text-zinc-500 mb-4\">\r\n            All plans include a 14-day free trial. No credit card required.\r\n          </p>\r\n          <div className=\"flex flex-wrap justify-center gap-6 text-sm text-gray-600 dark:text-zinc-400\">\r\n            <span className=\"flex items-center\">\r\n              <CheckIcon />\r\n              Cancel anytime\r\n            </span>\r\n            <span className=\"flex items-center\">\r\n              <CheckIcon />\r\n              24/7 support\r\n            </span>\r\n            <span className=\"flex items-center\">\r\n              <CheckIcon />\r\n              99.9% uptime SLA\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PricingSection;",
      "type": "registry:ui"
    },
    {
      "path": "pricing2.tsx",
      "content": "'use client'\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Helper component for animating numbers with a \"smokey\" effect\r\ninterface AnimatedPriceProps {\r\n  price: string;\r\n}\r\n\r\nconst AnimatedPrice: React.FC<AnimatedPriceProps> = ({ price }) => {\r\n  return (\r\n    <motion.span\r\n      className=\"inline-block\" // Ensure it takes up space for animation\r\n      key={price} // Add key to force re-render and animation on price change\r\n      initial={{ opacity: 0, filter: 'blur(8px)' }}\r\n      animate={{ opacity: 1, filter: 'blur(0px)' }}\r\n      transition={{ duration: 0.5, ease: 'easeOut' }}\r\n    >\r\n      {price}\r\n    </motion.span>\r\n  );\r\n};\r\n\r\nconst Pricing2 = () => {\r\n  const [isMonthly, setIsMonthly] = useState(true);\r\n  const monthlyButtonRef = useRef<HTMLButtonElement>(null);\r\n  const yearlyButtonRef = useRef<HTMLButtonElement>(null);\r\n  const [activeButtonLeft, setActiveButtonLeft] = useState(0);\r\n  const [activeButtonWidth, setActiveButtonWidth] = useState(0);\r\n\r\n  // Effect to measure button widths and positions\r\n  useEffect(() => {\r\n    const updateButtonMetrics = () => {\r\n      // Ensure refs are available before trying to access offset properties\r\n      if (monthlyButtonRef.current && yearlyButtonRef.current) {\r\n        if (isMonthly) {\r\n          setActiveButtonLeft(monthlyButtonRef.current.offsetLeft);\r\n          setActiveButtonWidth(monthlyButtonRef.current.offsetWidth);\r\n        } else {\r\n          setActiveButtonLeft(yearlyButtonRef.current.offsetLeft);\r\n          setActiveButtonWidth(yearlyButtonRef.current.offsetWidth);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Initial calculation on component mount\r\n    updateButtonMetrics();\r\n\r\n    // Recalculate on window resize to ensure responsiveness\r\n    window.addEventListener('resize', updateButtonMetrics);\r\n\r\n    // Cleanup event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', updateButtonMetrics);\r\n    };\r\n  }, [isMonthly]); // Recalculate when isMonthly state changes\r\n\r\n  const pricingTiers = [\r\n    {\r\n      name: 'Basic',\r\n      monthlyPrice: '$19',\r\n      yearlyPrice: '$199',\r\n      features: [\r\n        '5 Projects',\r\n        '10 GB Storage',\r\n        'Basic Analytics',\r\n        'Community Support',\r\n        'Custom Domains'\r\n      ],\r\n      buttonText: 'Get Started',\r\n      isPopular: false,\r\n    },\r\n    {\r\n      name: 'Pro',\r\n      monthlyPrice: '$49',\r\n      yearlyPrice: '$499',\r\n      features: [\r\n        'Unlimited Projects',\r\n        '50 GB Storage',\r\n        'Advanced Analytics',\r\n        'Priority Email Support',\r\n        'Custom Domains',\r\n        'Team Collaboration'\r\n      ],\r\n      buttonText: 'Start Free Trial',\r\n      isPopular: true,\r\n    },\r\n    {\r\n      name: 'Enterprise',\r\n      monthlyPrice: '$99',\r\n      yearlyPrice: '$999',\r\n      features: [\r\n        'All Pro Features',\r\n        'Unlimited Storage',\r\n        'Real-time Analytics',\r\n        '24/7 Phone Support',\r\n        'Dedicated Account Manager',\r\n        'SAML/SSO Integration'\r\n      ],\r\n      buttonText: 'Contact Sales',\r\n      isPopular: false,\r\n    },\r\n  ];\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const cardVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        type: 'spring' as const,\r\n        stiffness: 100,\r\n        damping: 10,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen w-full relative bg-white dark:bg-black overflow-hidden\">\r\n      {/* Rose Twilight Background with Top Glow - Light/Dark mode support */}\r\n      <div\r\n        className=\"absolute inset-0 z-0\"\r\n        style={{\r\n          background: \"radial-gradient(ellipse 80% 60% at 50% 0%, rgba(202, 44, 72, 0.15), transparent 70%), rgb(248 250 252)\",\r\n        }}\r\n      />\r\n      <div\r\n        className=\"absolute inset-0 z-0 dark:block hidden\"\r\n        style={{\r\n          background: \"radial-gradient(ellipse 80% 60% at 50% 0%, rgba(202, 44, 72, 0.25), transparent 70%), #000000\",\r\n        }}\r\n      />\r\n      {/* Additional subtle glow elements - Light/Dark mode support */}\r\n      <div className=\"absolute top-1/4 left-1/4 w-48 h-48 bg-[#CA2C48] rounded-full mix-blend-multiply filter blur-xl opacity-5 dark:opacity-10 animate-blob animation-delay-2000 pointer-events-none\"></div>\r\n      <div className=\"absolute bottom-1/4 right-1/4 w-48 h-48 bg-[#CA2C48] rounded-full mix-blend-multiply filter blur-xl opacity-5 dark:opacity-10 animate-blob animation-delay-4000 pointer-events-none\"></div>\r\n\r\n\r\n      {/* Your Content/Components - This is the existing pricing page content */}\r\n      <div className=\"relative z-10 font-inter py-12 px-4 sm:px-6 lg:px-8 flex items-center justify-center min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto w-full\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-extrabold text-gray-900 dark:text-white tracking-tight leading-tight\">\r\n              Simple, Transparent Pricing\r\n            </h1>\r\n            <p className=\"mt-4 text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\r\n              Choose the plan that&apos;s right for you. No hidden fees, no surprises.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Billing Toggle - Light/Dark mode support with black glow */}\r\n          <div className=\"mt-10 flex justify-center\">\r\n            <div\r\n              className=\"relative flex items-center p-1 rounded-full border border-gray-300 dark:border-gray-700 dark:shadow-2xl\"\r\n              style={{\r\n                background: 'rgba(255, 255, 255, 0.8)', // Light mode background\r\n                backdropFilter: 'blur(10px)', // Glassy blur effect\r\n                WebkitBackdropFilter: 'blur(10px)', // For Safari compatibility\r\n                boxShadow: 'none', // No shadow in light mode\r\n              }}\r\n            >\r\n              <div\r\n                className=\"absolute inset-0 rounded-full dark:block hidden\"\r\n                style={{\r\n                  background: 'rgba(0, 0, 0, 0.8)', // Darker black background for more contrast\r\n                  backdropFilter: 'blur(10px)',\r\n                  WebkitBackdropFilter: 'blur(10px)',\r\n                  boxShadow: '0 0 30px rgba(0, 0, 0, 0.8), 0 0 60px rgba(0, 0, 0, 0.6), 0 0 90px rgba(0, 0, 0, 0.4)', // Black glow effect\r\n                }}\r\n              />\r\n              <button\r\n                ref={monthlyButtonRef}\r\n                onClick={() => setIsMonthly(true)}\r\n                className={`relative z-10 py-2 px-6 rounded-full text-sm font-medium text-center transition-all duration-300 ${\r\n                  isMonthly\r\n                    ? 'text-white'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200'\r\n                }`}\r\n              >\r\n                Monthly\r\n              </button>\r\n              <button\r\n                ref={yearlyButtonRef}\r\n                onClick={() => setIsMonthly(false)}\r\n                className={`relative z-10 py-2 px-6 rounded-full text-sm font-medium text-center transition-all duration-300 flex items-center justify-center ${\r\n                  !isMonthly\r\n                    ? 'text-white'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200'\r\n                }`}\r\n              >\r\n                Yearly\r\n                <span className=\"ml-2 px-2 py-0.5 bg-[#CA2C48] text-white text-xs font-bold rounded-full\">\r\n                  20% off\r\n                </span>\r\n              </button>\r\n              {/* Motion div for the active background - Updated for glassy feel */}\r\n              {activeButtonWidth > 0 && (\r\n                <motion.div\r\n                  className=\"absolute inset-y-1 rounded-full shadow-md\"\r\n                  style={{\r\n                    background: 'rgba(202, 44, 72, 0.8)', // Semi-transparent red\r\n                    backdropFilter: 'blur(8px)', // Glassy blur effect\r\n                    WebkitBackdropFilter: 'blur(8px)', // For Safari compatibility\r\n                  }}\r\n                  initial={false}\r\n                  animate={{\r\n                    left: activeButtonLeft,\r\n                    width: activeButtonWidth,\r\n                  }}\r\n                  transition={{ type: \"spring\" as const, stiffness: 300, damping: 30 }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pricing Cards - Updated for glassy feel */}\r\n          <motion.div\r\n            className=\"mt-16 grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n          >\r\n            {pricingTiers.map((tier) => (\r\n              <motion.div\r\n                key={tier.name}\r\n                className={`relative flex flex-col p-8 rounded-xl border transition-all duration-300 ${\r\n                  tier.isPopular\r\n                    ? 'border-[#CA2C48] bg-white/90 dark:bg-black/60'\r\n                    : 'border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-900/60'\r\n                }`}\r\n                style={{\r\n                  backdropFilter: 'blur(10px)', // Glassy blur effect\r\n                  WebkitBackdropFilter: 'blur(10px)', // For Safari compatibility\r\n                  boxShadow: tier.isPopular\r\n                    ? '0 10px 20px rgba(202, 44, 72, 0.15), 0 4px 8px rgba(0,0,0,0.1)'\r\n                    : '0 5px 15px rgba(0,0,0,0.1), 0 2px 4px rgba(0,0,0,0.05)', // Lighter shadows for light mode\r\n                }}\r\n                variants={cardVariants}\r\n                whileHover={{\r\n                  y: -8,\r\n                  boxShadow: tier.isPopular\r\n                    ? '0 25px 50px -12px rgba(202, 44, 72, 0.3), 0 10px 10px -5px rgba(0, 0, 0, 0.15)'\r\n                    : '0 25px 50px -12px rgba(0, 0, 0, 0.2), 0 10px 10px -5px rgba(0, 0, 0, 0.1)',\r\n                }}\r\n                transition={{ type: \"spring\" as const, stiffness: 300, damping: 20 }}\r\n              >\r\n                {tier.isPopular && (\r\n                  <div className=\"absolute -top-3 left-1/2 -translate-x-1/2 px-3 py-1 bg-[#CA2C48] text-white text-xs font-semibold uppercase rounded-full shadow-md\">\r\n                    Most Popular\r\n                  </div>\r\n                )}\r\n                <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">{tier.name}</h3>\r\n                <div className=\"mt-4 flex items-baseline\">\r\n                  <span className=\"text-5xl font-extrabold text-gray-900 dark:text-white\">\r\n                    <AnimatedPrice price={isMonthly ? tier.monthlyPrice : tier.yearlyPrice} />\r\n                  </span>\r\n                  <span className=\"ml-1 text-xl font-medium text-gray-500 dark:text-gray-400\">\r\n                    /{isMonthly ? 'month' : 'year'}\r\n                  </span>\r\n                </div>\r\n                <p className=\"mt-4 text-gray-600 dark:text-gray-400 text-sm\">\r\n                  {tier.name === 'Basic' && 'For individuals and small teams getting started.'}\r\n                  {tier.name === 'Pro' && 'Perfect for growing businesses and advanced users.'}\r\n                  {tier.name === 'Enterprise' && 'Tailored for large organizations with specific needs.'}\r\n                </p>\r\n\r\n                <ul role=\"list\" className=\"mt-8 space-y-3 flex-grow\">\r\n                  {tier.features.map((feature) => (\r\n                    <li key={feature} className=\"flex items-start\">\r\n                      <svg\r\n                        className=\"flex-shrink-0 h-5 w-5 text-[#CA2C48] mt-1\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                      </svg>\r\n                      <p className=\"ml-3 text-base text-gray-700 dark:text-gray-200\">{feature}</p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n\r\n                <div className=\"mt-8\">\r\n                  <motion.button\r\n                    className={`w-full py-2 px-4 rounded-md text-base font-medium shadow-sm transition-all duration-300 inline-flex items-center justify-center border ${\r\n                      tier.isPopular\r\n                        ? 'bg-[#CA2C48] text-white border-[#CA2C48] hover:bg-[#B02441]'\r\n                        : 'bg-white/80 dark:bg-gray-800/80 text-[#CA2C48] border-[#CA2C48]/30 dark:border-[#CA2C48]/50 hover:bg-[#CA2C48]/10 dark:hover:bg-[#CA2C48]/20'\r\n                    }`}\r\n                    style={{\r\n                      backdropFilter: 'blur(5px)', // Glassy blur for buttons\r\n                      WebkitBackdropFilter: 'blur(5px)', // For Safari compatibility\r\n                    }}\r\n                    whileHover={{\r\n                      scale: 1.005,\r\n                      boxShadow: tier.isPopular\r\n                        ? '0 4px 8px rgba(202, 44, 72, 0.3)'\r\n                        : '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    }}\r\n                    whileTap={{ scale: 0.995 }}\r\n                  >\r\n                    {tier.buttonText}\r\n                  </motion.button>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pricing2;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "pricing3.tsx",
      "content": "'use client';\r\n\r\nimport { Sparkles, ArrowRight, Check, Star, Zap, Shield } from 'lucide-react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Utility function for conditional class names\r\nfunction cn(...classes: (string | undefined | null | false)[]): string {\r\n  return classes.filter(Boolean).join(' ');\r\n}\r\n\r\n// Card components\r\ninterface CardProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({ className, children }) => (\r\n  <div className={cn('rounded-lg border bg-card text-card-foreground shadow-sm', className)}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CardHeader: React.FC<CardProps> = ({ className, children }) => (\r\n  <div className={cn('flex flex-col space-y-1.5 p-6', className)}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CardTitle: React.FC<CardProps> = ({ className, children }) => (\r\n  <h3 className={cn('text-2xl font-semibold leading-none tracking-tight', className)}>\r\n    {children}\r\n  </h3>\r\n);\r\n\r\nconst CardDescription: React.FC<CardProps> = ({ className, children }) => (\r\n  <div className={cn('text-sm text-muted-foreground', className)}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CardContent: React.FC<CardProps> = ({ className, children }) => (\r\n  <div className={cn('p-6 pt-0', className)}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CardFooter: React.FC<CardProps> = ({ className, children }) => (\r\n  <div className={cn('flex items-center p-6 pt-0', className)}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\n// Custom AnimatedNumber component to replace NumberFlow\r\ninterface AnimatedNumberProps {\r\n  value: number;\r\n  format: {\r\n    style: 'currency' | 'decimal' | 'percent';\r\n    currency?: string;\r\n    maximumFractionDigits: number;\r\n  };\r\n  className?: string;\r\n}\r\n\r\nconst AnimatedNumber: React.FC<AnimatedNumberProps> = ({ value, format, className }) => {\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n  const animationFrameRef = useRef<number | null>(null);\r\n  const startTimeRef = useRef<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    const duration = 500; // milliseconds for the animation\r\n\r\n    const animate = (timestamp: DOMHighResTimeStamp) => {\r\n      if (!startTimeRef.current) {\r\n        startTimeRef.current = timestamp;\r\n      }\r\n\r\n      const progress = (timestamp - startTimeRef.current) / duration;\r\n      const easedProgress = Math.min(1, progress); // Ensure progress doesn't exceed 1\r\n\r\n      const newValue = easedProgress * value;\r\n      setCurrentValue(newValue);\r\n\r\n      if (progress < 1) {\r\n        animationFrameRef.current = requestAnimationFrame(animate);\r\n      } else {\r\n        setCurrentValue(value); // Ensure final value is exact\r\n        startTimeRef.current = null; // Reset for next animation\r\n      }\r\n    };\r\n\r\n    // Clear any existing animation frame before starting a new one\r\n    if (animationFrameRef.current) {\r\n      cancelAnimationFrame(animationFrameRef.current);\r\n    }\r\n    startTimeRef.current = null; // Reset start time for new animation\r\n    animationFrameRef.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [value]);\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: format.style,\r\n    currency: format.currency,\r\n    maximumFractionDigits: format.maximumFractionDigits,\r\n  });\r\n\r\n  return <span className={className}>{formatter.format(currentValue)}</span>;\r\n};\r\n\r\n\r\n// Define the structure for a plan for better type safety and readability\r\ninterface Plan {\r\n  id: string;\r\n  name: string;\r\n  icon: React.ElementType; // Using React.ElementType for component props\r\n  price: {\r\n    monthly: number | string;\r\n    yearly: number | string;\r\n  };\r\n  description: string;\r\n  features: string[];\r\n  cta: string;\r\n  popular?: boolean; // Optional property\r\n}\r\n\r\n// Data for the pricing plans\r\nconst plans: Plan[] = [\r\n  {\r\n    id: 'starter',\r\n    name: 'Starter AI',\r\n    icon: Star,\r\n    price: {\r\n      monthly: 'Free forever',\r\n      yearly: 'Free forever',\r\n    },\r\n    description:\r\n      'Kickstart your AI journey with essential features for personal projects.',\r\n    features: [\r\n      '1,000 AI generations / month',\r\n      'Basic AI model access',\r\n      'Community support',\r\n      'Standard processing speed',\r\n      '500MB storage for models',\r\n    ],\r\n    cta: 'Start for Free',\r\n  },\r\n  {\r\n    id: 'pro',\r\n    name: 'Pro AI',\r\n    icon: Zap,\r\n    price: {\r\n      monthly: 90,\r\n      yearly: 75,\r\n    },\r\n    description: 'Unlock advanced AI capabilities for your growing applications.',\r\n    features: [\r\n      'Unlimited AI generations',\r\n      'Premium AI model access',\r\n      'Priority email support',\r\n      'High-speed processing',\r\n      '10GB storage for models',\r\n    ],\r\n    cta: 'Subscribe to Pro AI',\r\n    popular: true,\r\n  },\r\n  {\r\n    id: 'enterprise',\r\n    name: 'Enterprise AI',\r\n    icon: Shield,\r\n    price: {\r\n      monthly: 'Contact for pricing',\r\n      yearly: 'Contact for pricing',\r\n    },\r\n    description: 'Tailored AI solutions for large-scale deployments and critical needs.',\r\n    features: [\r\n      'Customizable AI models',\r\n      'Dedicated technical account manager',\r\n      'On-premise deployment options',\r\n      'Ultra-low latency processing',\r\n      'Unlimited secure storage',\r\n    ],\r\n    cta: 'Request a Demo',\r\n  },\r\n];\r\n\r\nexport default function SimplePricing() {\r\n  // State to manage the selected frequency (monthly or yearly)\r\n  const [frequency, setFrequency] = useState<'monthly' | 'yearly'>('monthly');\r\n  // State to track if the component has mounted to prevent hydration errors\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  // Set mounted to true after the component has been rendered on the client side\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  // Render nothing until the component is mounted to prevent hydration mismatches\r\n  if (!mounted) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"not-prose relative flex w-full flex-col gap-16 overflow-hidden px-4 py-24 text-center sm:px-8\">\r\n      {/* Background gradient effects for visual appeal */}\r\n      <div className=\"absolute inset-0 -z-10 overflow-hidden\">\r\n        <div className=\"absolute -top-[10%] left-[50%] h-[40%] w-[60%] -translate-x-1/2 rounded-full bg-primary/10 blur-3xl\" />\r\n        <div className=\"absolute -bottom-[10%] -right-[10%] h-[40%] w-[40%] rounded-full bg-primary/5 blur-3xl\" />\r\n        <div className=\"absolute -bottom-[10%] -left-[10%] h-[40%] w-[40%] rounded-full bg-primary/5 blur-3xl\" />\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items-center justify-center gap-8\">\r\n        {/* Section for title and description */}\r\n        <div className=\"flex flex-col items-center space-y-2\">\r\n          {/* Pricing Plans Badge - Replaced with span */}\r\n          <span\r\n            className=\"mb-4 inline-flex items-center rounded-full border border-primary/20 bg-primary/5 px-4 py-1 text-sm font-medium text-foreground\"\r\n          >\r\n            <Sparkles className=\"mr-1 h-3.5 w-3.5 animate-pulse text-primary\" />\r\n            AI Subscription Plans\r\n          </span>\r\n          {/* Main Title with animation */}\r\n          <motion.h1\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"bg-gradient-to-b from-foreground to-foreground/30 bg-clip-text text-4xl font-bold text-transparent sm:text-5xl\"\r\n          >\r\n            Choose the AI plan that powers your innovation\r\n          </motion.h1>\r\n          {/* Description with animation */}\r\n          <motion.p\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.1 }}\r\n            className=\"max-w-md pt-2 text-lg text-muted-foreground\"\r\n          >\r\n            Flexible and powerful AI plans designed to scale with your needs, from hobby projects to enterprise solutions.\r\n          </motion.p>\r\n        </div>\r\n\r\n        {/* Frequency Tabs with animation - Replaced with div and buttons */}\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.95 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          transition={{ duration: 0.4, delay: 0.2 }}\r\n        >\r\n          <div\r\n            className=\"inline-block rounded-full bg-muted/30 p-1 shadow-sm\"\r\n          >\r\n            <div className=\"flex bg-transparent\">\r\n              <button\r\n                onClick={() => setFrequency('monthly')}\r\n                className={cn(\r\n                  \"inline-flex items-center justify-center whitespace-nowrap rounded-full px-3 py-1.5 text-sm font-medium ring-offset-background transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n                  frequency === 'monthly'\r\n                    ? 'bg-background shadow-sm'\r\n                    : 'bg-transparent hover:bg-muted/50'\r\n                )}\r\n              >\r\n                Monthly\r\n              </button>\r\n              <button\r\n                onClick={() => setFrequency('yearly')}\r\n                className={cn(\r\n                  \"inline-flex items-center justify-center whitespace-nowrap rounded-full px-3 py-1.5 text-sm font-medium ring-offset-background transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n                  frequency === 'yearly'\r\n                    ? 'bg-background shadow-sm'\r\n                    : 'bg-transparent hover:bg-muted/50'\r\n                )}\r\n              >\r\n                Yearly\r\n                <span\r\n                  className=\"ml-2 inline-flex items-center rounded-full border border-transparent bg-primary/10 px-2.5 py-0.5 text-xs font-semibold text-primary transition-colors hover:bg-primary/15\"\r\n                >\r\n                  20% off\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Pricing Cards Grid */}\r\n        <div className=\"mt-8 grid w-full max-w-6xl grid-cols-1 gap-6 md:grid-cols-3\">\r\n          {plans.map((plan, index) => (\r\n            <motion.div\r\n              key={plan.id}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.5, delay: 0.1 + index * 0.1 }}\r\n              whileHover={{ y: -5 }} // Hover effect for cards\r\n              className=\"flex\" // Use flex to make cards fill available height\r\n            >\r\n              <Card\r\n                className={cn(\r\n                  'relative h-full w-full bg-secondary/20 text-left transition-all duration-300 hover:shadow-lg',\r\n                  plan.popular\r\n                    ? 'shadow-md ring-2 ring-primary/50 dark:shadow-primary/10'\r\n                    : 'hover:border-primary/30',\r\n                  plan.popular &&\r\n                    'bg-gradient-to-b from-primary/[0.03] to-transparent',\r\n                )}\r\n              >\r\n                {/* \"Popular\" Badge for the popular plan - Replaced with span */}\r\n                {plan.popular && (\r\n                  <div className=\"absolute -top-3 left-0 right-0 mx-auto w-fit\">\r\n                    <span className=\"inline-flex items-center rounded-full bg-primary px-4 py-1 text-sm font-medium text-primary-foreground shadow-sm\">\r\n                      <Sparkles className=\"mr-1 h-3.5 w-3.5\" />\r\n                      Most Popular\r\n                    </span>\r\n                  </div>\r\n                )}\r\n                <CardHeader className={cn('pb-4', plan.popular && 'pt-8')}>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {/* Plan Icon */}\r\n                    <div\r\n                      className={cn(\r\n                        'flex h-8 w-8 items-center justify-center rounded-full',\r\n                        plan.popular\r\n                          ? 'bg-primary/10 text-primary'\r\n                          : 'bg-secondary text-foreground',\r\n                      )}\r\n                    >\r\n                      <plan.icon className=\"h-4 w-4\" />\r\n                    </div>\r\n                    {/* Plan Name */}\r\n                    <CardTitle\r\n                      className={cn(\r\n                        'text-xl font-bold',\r\n                        plan.popular && 'text-primary',\r\n                      )}\r\n                    >\r\n                      {plan.name}\r\n                    </CardTitle>\r\n                  </div>\r\n                  <CardDescription className=\"mt-3 space-y-2\">\r\n                    {/* Plan Description */}\r\n                    <p className=\"text-sm\">{plan.description}</p>\r\n                    {/* Price Display */}\r\n                    <div className=\"pt-2\">\r\n                      {typeof plan.price[frequency] === 'number' ? (\r\n                        <div className=\"flex items-baseline\">\r\n                          <AnimatedNumber // Using custom AnimatedNumber component\r\n                            className={cn(\r\n                              'text-3xl font-bold',\r\n                              plan.popular ? 'text-primary' : 'text-foreground',\r\n                            )}\r\n                            format={{\r\n                              style: 'currency',\r\n                              currency: 'USD',\r\n                              maximumFractionDigits: 0,\r\n                            }}\r\n                            value={plan.price[frequency] as number}\r\n                          />\r\n                          <span className=\"ml-1 text-sm text-muted-foreground\">\r\n                            /month, billed {frequency}\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        <span\r\n                          className={cn(\r\n                            'text-2xl font-bold',\r\n                            plan.popular ? 'text-primary' : 'text-foreground',\r\n                          )}\r\n                        >\r\n                          {plan.price[frequency]}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"grid gap-3 pb-6\">\r\n                  {/* Features List */}\r\n                  {plan.features.map((feature, featureIndex) => (\r\n                    <motion.div\r\n                      key={featureIndex}\r\n                      initial={{ opacity: 0, x: -5 }}\r\n                      animate={{ opacity: 1, x: 0 }}\r\n                      transition={{ duration: 0.3, delay: 0.5 + featureIndex * 0.05 }}\r\n                      className=\"flex items-center gap-2 text-sm\"\r\n                    >\r\n                      <div\r\n                        className={cn(\r\n                          'flex h-5 w-5 items-center justify-center rounded-full',\r\n                          plan.popular\r\n                            ? 'bg-primary/10 text-primary'\r\n                            : 'bg-secondary text-secondary-foreground',\r\n                        )}\r\n                      >\r\n                        <Check className=\"h-3.5 w-3.5\" />\r\n                      </div>\r\n                      <span\r\n                        className={\r\n                          plan.popular\r\n                            ? 'text-foreground'\r\n                            : 'text-muted-foreground'\r\n                        }\r\n                      >\r\n                        {feature}\r\n                      </span>\r\n                    </motion.div>\r\n                  ))}\r\n                </CardContent>\r\n                <CardFooter>\r\n                  {/* Call to Action Button - Replaced with button */}\r\n                  <button\r\n                    className={cn(\r\n                      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 h-10 px-4 py-2 w-full group',\r\n                      plan.popular\r\n                        ? 'bg-primary text-primary-foreground hover:bg-primary/90 hover:shadow-md hover:shadow-primary/20'\r\n                        : 'border border-input bg-background hover:border-primary/30 hover:bg-primary/5 hover:text-primary',\r\n                    )}\r\n                  >\r\n                    {plan.cta}\r\n                    <ArrowRight className=\"ml-2 h-4 w-4 transition-transform duration-300 group-hover:translate-x-1\" />\r\n                  </button>\r\n                </CardFooter>\r\n\r\n                {/* Subtle gradient effects and border for popular plan */}\r\n                {plan.popular ? (\r\n                  <>\r\n                    <div className=\"pointer-events-none absolute bottom-0 left-0 right-0 h-1/2 rounded-b-lg bg-gradient-to-t from-primary/[0.05] to-transparent\" />\r\n                    <div className=\"pointer-events-none absolute inset-0 rounded-lg border border-primary/20\" />\r\n                  </>\r\n                ) : (\r\n                  <div className=\"pointer-events-none absolute inset-0 rounded-lg border border-transparent opacity-0 transition-opacity duration-300 hover:border-primary/10 hover:opacity-100\" />\r\n                )}\r\n              </Card>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}