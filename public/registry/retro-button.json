{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "retro-button",
  "title": "Retro Button",
  "description": "A minimalistic retro button component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "retro-button.tsx",
      "content": "\"use client\";\r\nimport React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nconst cn = (...classes: (string | boolean | undefined | null)[]): string => {\r\n  return classes.filter(Boolean).join(\" \");\r\n};\r\n\r\nconst buttonVariants = cva(\r\n  \"font-sans transition-all outline-none cursor-pointer duration-200 font-medium flex items-center justify-center disabled:cursor-not-allowed disabled:opacity-60\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-[#00ff84] text-[#000000] border-2 border-[#000000] shadow-[4px_4px_0px_0px_#000000] hover:shadow-none hover:translate-x-1 hover:translate-y-1 disabled:hover:translate-x-0 disabled:hover:translate-y-0 disabled:hover:shadow-[4px_4px_0px_0px_#000000] dark:bg-[#00ff84] dark:text-[#000000] dark:border-[#000000] dark:shadow-[4px_4px_0px_0px_#ffffff]\",\r\n        secondary:\r\n          \"bg-[#374151] text-[#ffffff] border-2 border-[#000000] shadow-[4px_4px_0px_0px_#000000] hover:shadow-none hover:translate-x-1 hover:translate-y-1 disabled:hover:translate-x-0 disabled:hover:translate-y-0 disabled:hover:shadow-[4px_4px_0px_0px_#000000] dark:bg-[#374151] dark:text-[#ffffff] dark:border-[#000000] dark:shadow-[4px_4px_0px_0px_#ffffff]\",\r\n        outline:\r\n          \"bg-transparent text-[#00ff84] border-2 border-[#00ff84] shadow-[4px_4px_0px_0px_#000000] hover:shadow-none hover:translate-x-1 hover:translate-y-1 hover:bg-[#00ff84] hover:text-[#000000] disabled:hover:bg-transparent disabled:hover:text-[#00ff84] disabled:hover:translate-x-0 disabled:hover:translate-y-0 disabled:hover:shadow-[4px_4px_0px_0px_#000000] dark:bg-transparent dark:text-[#00ff84] dark:border-[#00ff84] dark:shadow-[4px_4px_0px_0px_#ffffff] dark:hover:bg-[#00ff84] dark:hover:text-[#000000]\",\r\n        link: \"bg-transparent text-[#00ff84] hover:underline dark:text-[#00ff84]\",\r\n      },\r\n      size: {\r\n        sm: \"px-4 py-2 text-sm\",\r\n        md: \"px-6 py-2.5 text-base\",\r\n        lg: \"px-8 py-4 text-lg\",\r\n        icon: \"h-12 w-12\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface IButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  loading?: boolean;\r\n}\r\n\r\nconst Spinner: React.FC = () => (\r\n  <svg\r\n    className=\"animate-spin h-6 w-6 text-current\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <circle\r\n      className=\"opacity-25\"\r\n      cx=\"12\"\r\n      cy=\"12\"\r\n      r=\"10\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"4\"\r\n    ></circle>\r\n    <path\r\n      className=\"opacity-75\"\r\n      fill=\"currentColor\"\r\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, IButtonProps>(\r\n  ({ className, variant, size, children, loading = false, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        disabled={loading || props.disabled}\r\n        {...props}\r\n      >\r\n        {loading ? <Spinner /> : children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport default Button;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "retro-btn.tsx",
      "content": "\"use client\";\r\nimport React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nconst cn = (...classes: (string | boolean | undefined | null)[]): string => {\r\n  return classes.filter(Boolean).join(\" \");\r\n};\r\n\r\nconst buttonVariants = cva(\r\n  \"font-sans transition-all outline-none cursor-pointer duration-200 font-medium flex items-center justify-center disabled:cursor-not-allowed disabled:opacity-60\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-[#00ff84] text-[#000000] border-2 border-[#000000] shadow-[4px_4px_0px_0px_#000000] hover:shadow-none hover:translate-x-1 hover:translate-y-1 disabled:hover:translate-x-0 disabled:hover:translate-y-0 disabled:hover:shadow-[4px_4px_0px_0px_#000000] dark:bg-[#00ff84] dark:text-[#000000] dark:border-[#000000] dark:shadow-[4px_4px_0px_0px_#ffffff]\",\r\n        secondary:\r\n          \"bg-[#374151] text-[#ffffff] border-2 border-[#000000] shadow-[4px_4px_0px_0px_#000000] hover:shadow-none hover:translate-x-1 hover:translate-y-1 disabled:hover:translate-x-0 disabled:hover:translate-y-0 disabled:hover:shadow-[4px_4px_0px_0px_#000000] dark:bg-[#374151] dark:text-[#ffffff] dark:border-[#000000] dark:shadow-[4px_4px_0px_0px_#ffffff]\",\r\n        outline:\r\n          \"bg-transparent text-[#00ff84] border-2 border-[#00ff84] shadow-[4px_4px_0px_0px_#000000] hover:shadow-none hover:translate-x-1 hover:translate-y-1 hover:bg-[#00ff84] hover:text-[#000000] disabled:hover:bg-transparent disabled:hover:text-[#00ff84] disabled:hover:translate-x-0 disabled:hover:translate-y-0 disabled:hover:shadow-[4px_4px_0px_0px_#000000] dark:bg-transparent dark:text-[#00ff84] dark:border-[#00ff84] dark:shadow-[4px_4px_0px_0px_#ffffff] dark:hover:bg-[#00ff84] dark:hover:text-[#000000]\",\r\n        link: \"bg-transparent text-[#00ff84] hover:underline dark:text-[#00ff84]\",\r\n      },\r\n      size: {\r\n        sm: \"px-4 py-2 text-sm\",\r\n        md: \"px-6 py-2.5 text-base\",\r\n        lg: \"px-8 py-4 text-lg\",\r\n        icon: \"h-12 w-12\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface IButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  loading?: boolean;\r\n}\r\n\r\nconst Spinner: React.FC = () => (\r\n  <svg\r\n    className=\"animate-spin h-6 w-6 text-current\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <circle\r\n      className=\"opacity-25\"\r\n      cx=\"12\"\r\n      cy=\"12\"\r\n      r=\"10\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"4\"\r\n    ></circle>\r\n    <path\r\n      className=\"opacity-75\"\r\n      fill=\"currentColor\"\r\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, IButtonProps>(\r\n  ({ className, variant, size, children, loading = false, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        disabled={loading || props.disabled}\r\n        {...props}\r\n      >\r\n        {loading ? <Spinner /> : children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport default Button;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "retro-view.tsx",
      "content": "\"use client\";\r\nimport React from \"react\";\r\nimport DefaultButtons from \"./components/DefaultButtons\";\r\nimport SecondaryButtons from \"./components/SecondaryButtons\";\r\nimport OutlineButtons from \"./components/OutlineButtons\";\r\nimport IconButtons from \"./components/IconButtons\";\r\nimport LinkButtons from \"./components/LinkButtons\";\r\nimport LoadingButtons from \"./components/LoadingButtons\";\r\nimport ButtonsWithIcons from \"./components/ButtonsWithIcons\";\r\nimport FormButtons from \"./components/FormButtons\";\r\nimport SizeComparison from \"./components/SizeComparison\";\r\nimport InteractiveDemo from \"./components/InteractiveDemo\";\r\n\r\nexport default function RetroButtonView() {\r\n  // Section Title Helper Component\r\n  interface SectionTitleProps {\r\n    title: string;\r\n    description?: string;\r\n  }\r\n\r\n  const SectionTitle: React.FC<SectionTitleProps> = ({\r\n    title,\r\n    description,\r\n  }) => (\r\n    <div className=\"mb-8 text-center\">\r\n      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n        {title}\r\n      </h2>\r\n      {description && (\r\n        <p className=\"text-gray-600 dark:text-gray-400 text-sm max-w-2xl mx-auto\">\r\n          {description}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"py-12 px-4\">\r\n      <div className=\"max-w-6xl mx-auto space-y-16\">\r\n        {/* Header */}\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n            Retro Button Components\r\n          </h1>\r\n          <p className=\"text-lg text-gray-600 dark:text-gray-400 max-w-3xl mx-auto\">\r\n            A comprehensive showcase of retro-styled button components with hard\r\n            shadows, vibrant colors, and smooth hover animations. Perfect for\r\n            modern applications with a nostalgic twist.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Default Buttons */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Default Buttons\"\r\n            description=\"Primary action buttons with the signature retro styling and hard shadow effects\"\r\n          />\r\n          <DefaultButtons />\r\n        </section>\r\n\r\n        {/* Secondary Buttons */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Secondary Buttons\"\r\n            description=\"Alternative styling for secondary actions with gray background\"\r\n          />\r\n          <SecondaryButtons />\r\n        </section>\r\n\r\n        {/* Outline Buttons */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Outline Buttons\"\r\n            description=\"Transparent buttons with colored borders that fill on hover\"\r\n          />\r\n          <OutlineButtons />\r\n        </section>\r\n\r\n        {/* Icon Buttons */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Icon Buttons\"\r\n            description=\"Square buttons designed specifically for icons and single actions\"\r\n          />\r\n          <IconButtons />\r\n        </section>\r\n\r\n        {/* Link Buttons */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Link Buttons\"\r\n            description=\"Minimal styling for text-based actions and navigation\"\r\n          />\r\n          <LinkButtons />\r\n        </section>\r\n\r\n        {/* Loading States */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Loading States\"\r\n            description=\"Interactive buttons with loading spinners and disabled states during async operations\"\r\n          />\r\n          <LoadingButtons />\r\n        </section>\r\n\r\n        {/* Button with Icons and Text */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Buttons with Icons\"\r\n            description=\"Combining icons with text for enhanced user experience and visual clarity\"\r\n          />\r\n          <ButtonsWithIcons />\r\n        </section>\r\n\r\n        {/* Form Buttons */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Form Actions\"\r\n            description=\"Common button combinations used in forms and dialogs\"\r\n          />\r\n          <FormButtons />\r\n        </section>\r\n\r\n        {/* Size Comparison */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Size Comparison\"\r\n            description=\"All available button sizes side by side for easy comparison\"\r\n          />\r\n          <SizeComparison />\r\n        </section>\r\n\r\n        {/* Interactive Demo */}\r\n        <section>\r\n          <SectionTitle\r\n            title=\"Interactive Demo\"\r\n            description=\"Try clicking these buttons to see the retro hover and click animations in action\"\r\n          />\r\n          <InteractiveDemo />\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}